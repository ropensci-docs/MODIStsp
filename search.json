[{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"MODIStsp R package allowing automatize creation time series rasters derived MODIS Land Products data. allows performing several preprocessing steps MODIS data available within given time period. Development MODIStsp started modifications ModisDownload R script Thomas Hengl (2010), successive adaptations Babak Naimi (2014). basic functionalities download preprocessing MODIS datasets provided scripts gradually incremented aim : developing stand-alone application allowing perform several preprocessing steps (e.g., download, mosaicing, reprojection resize) available MODIS land products exploiting powerful user-friendly GUI front-end; allowing creation time series MODIS original layers additional Quality Indicators (e.g., data acquisition quality, cloud/snow presence, algorithm used data production, etc. ) extracted aggregated bit-field QA layers; allowing automatic calculation creation time series several additional Spectral Indexes starting form MODIS surface reflectance products. processing parameters can easily set user-friendly GUI, although non-interactive execution exploiting previously created Options File possible. Stand-alone execution outside R environment also possible, allowing use scheduled execution MODIStsp automatically update time series related MODIS product extent whenever new image available. Required MODIS HDF files automatically downloaded NASA servers resized, reprojected, resampled processed according user’s choices. desired output layer, outputs saved single-band rasters corresponding acquisition date available selected MODIS product within specified time period. “R” RasterStack objects temporal information well Virtual raster files (GDAL vrt ENVI META files) facilitating access entire time series can also created.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"MODIStsp requires R v >= 3.6.3.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"on-windows","dir":"Articles","previous_headings":"Installation","what":"On Windows","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"can install stable version MODIStsp CRAN: install.packages(\"MODIStsp\") , development version (containing latest improvements bug fixes) GitHub:","code":"install.packages(\"remotes\") library(remotes) install_github(\"ropensci/MODIStsp\")"},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"on-linux-systems","dir":"Articles","previous_headings":"Installation","what":"On Linux systems","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"install MODIStsp Linux, need able install sf package, requires several dependencies. See trouble installing sf. addition, need install dependencies required protolite package, required geojson. See instructions installing . , can install stable version MODIStsp CRAN: , development version (containing latest improvements bug fixes) GitHub:","code":"install.packages(\"MODIStsp\") library(devtools) install_github(\"ropensci/MODIStsp\")"},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"on-mac-os","dir":"Articles","previous_headings":"Installation","what":"On Mac OS","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"install MODIStsp MacOS, need able install sf package, requires several dependencies. See trouble installing sf. , can install stable version MODIStsp CRAN: , development version (containing latest improvements bug fixes) GitHub:","code":"install.packages(\"MODIStsp\") library(devtools) install_github(\"ropensci/MODIStsp\")"},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"running-the-tool-in-interactive-mode-the-modistsp-gui","dir":"Articles","previous_headings":"","what":"Running the tool in Interactive Mode: the MODIStsp GUI","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"easiest way use MODIStsp use powerful GUI (Graphical User Interface) selection processing options, run processing. open GUI, load package launch MODIStsp function, parameters: opens GUI processing options can specified eventually saved (loaded). GUI allows selecting processing options required creation desired MODIS time series. main available processing options described detail following.  See (https://docs.ropensci.org/MODIStsp/articles/interactive_execution.html) info instructions regarding usage GUI.","code":"library(MODIStsp) MODIStsp()"},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"non-interactive-execution-from-within-r","dir":"Articles","previous_headings":"","what":"Non-Interactive Execution from within R","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"MODIStsp() can launched non-interactive mode within R session setting optional GUI parameter FALSE, either providing desired processing argument call function, providing previously saved opts_file specifying path JSON Options file previously saved GUI. allows exploiting MODIStsp functionalities within generic R processing scripts.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"specifying-the-processing-parameters-in-the-function-call","dir":"Articles","previous_headings":"Non-Interactive Execution from within R","what":"Specifying the processing parameters in the function call","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"processing parameters can set call MODIStsp(). Mandatory parameters selprod (specifying MODIS product), (one ) bandsel, quality_bandsel indexes_bandsel, (specify desired output layers), out_folder start_date end_date. user password also needed download_server equal \"offline\". function MODIStsp_get_prodlayers() allows easily retrieve names products available layers based product code, : parameters set automatically default values (see function reference details different available function arguments). example, following code processes layers NDVI EVI quality indicator usefulness product __M*D13Q1__, considering Terra Aqua platforms, dates comprised 2020-06-01 2020-06-15 saves output R tempdir(): Note example, well following ones, run single core follow CRAN policies, setting parallel = FALSE; users can exploit multicore functionalities skipping set argument.","code":"library(MODIStsp)  MODIStsp_get_prodlayers(\"M*D13Q1\") library(MODIStsp)   # **NOTE** Output files of examples are saved to file.path by setting out_folder to $tempdir.  # --> See name and available layers for product M*D13Q1 # MODIStsp_get_prodlayers(\"M*D13A2\")  # --> Launch the processing MODIStsp(   gui             = FALSE,    out_folder      = \"$tempdir\",    selprod         = \"Vegetation_Indexes_16Days_1Km (M*D13A2)\",   bandsel         = c(\"EVI\", \"NDVI\"),    quality_bandsel = \"QA_usef\",    indexes_bandsel = \"SR\",    user            = \"mstp_test\" ,   password        = \"MSTP_test_01\",   start_date      = \"2020.06.01\",    end_date        = \"2020.06.15\",    verbose         = FALSE,   parallel        = FALSE )  # Outputs are in this case in subfolder \"MODIStsp/VI_16Days_1Km_v61\" of  # `base::tempdir()`:   out_fold <- file.path(tempdir(), \"MODIStsp/VI_16Days_1Km_v61/\")  list.files(out_fold) list.files(file.path(out_fold ,\"EVI\")) list.files(file.path(out_fold ,\"QA_usef\"))"},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"launching-modistsp-using-a-saved-options-file","dir":"Articles","previous_headings":"Non-Interactive Execution from within R","what":"Launching MODIStsp using a saved “Options file”","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"Alternatively, can run MODIStsp() without opening GUI specifying previously saved options file:","code":"library(MODIStsp)   # **NOTE** Output files of examples are saved to file.path(tempdir(), \"MODIStsp\").  # --> Specify the path to a valid options file saved in advance from MODIStsp GUI  # Here we use a test json file saved in MODIStsp installation folder which # downloads and processed 3 MOD13A2 images over the Como Lake (Lombardy, Italy) # and retrieves NDVI and EVI data, plus the Usefulness Index Quality Indicator.  opts_file <- system.file(\"testdata/test_MOD13A2.json\", package = \"MODIStsp\")  # --> Launch the processing MODIStsp(gui = FALSE, opts_file = opts_file, verbose = FALSE, parallel = FALSE)  # Outputs are in this case in subfolder \"MODIStsp/VI_16Days_1Km_v61\" of  # tempdir():   out_fold <- file.path(tempdir(), \"MODIStsp/VI_16Days_1Km_v61\")  list.files(out_fold) list.files(file.path(out_fold ,\"EVI\"))"},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"looping-over-different-options-files","dir":"Articles","previous_headings":"Non-Interactive Execution from within R > Launching MODIStsp using a saved “Options file”","what":"Looping over different Options files","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"need process different MODIS products, can prepare beforehand different MODIStsp options files using GUI, loop like :","code":"opts_files <- c(system.file(\"testdata/test_MOD13A2.json\", package = \"MODIStsp\"),                  system.file(\"testdata/test_MOD10A2.json\", package = \"MODIStsp\"))  for (opts_file in opts_files) {   MODIStsp(gui = FALSE, opts_file = opts_file, verbose = FALSE, parallel = FALSE) }  # MOD13A2 ouptuts out_fold <- file.path(tempdir(), \"MODIStsp/VI_16Days_1Km_v61\")  list.files(out_fold) list.files(file.path(out_fold ,\"NDVI\"))  # MOD10A2 ouptuts out_fold <- file.path(tempdir(), \"MODIStsp/Surf_Temp_8Days_1Km_v61\")  list.files(out_fold) list.files(file.path(out_fold ,\"LST_Night_1km\"))"},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"specifying-the-processing-parameters-using-a-previously-saved-options-file-and-overwriting-some-parameters","dir":"Articles","previous_headings":"Non-Interactive Execution from within R","what":"Specifying the processing parameters using a previously saved options file and overwriting some parameters","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"Finally, possible specify previously saved options file setting parameters call function. allows easily performing similar processings, updating required arguments, examples .","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"looping-over-different-spatial-extents","dir":"Articles","previous_headings":"Non-Interactive Execution from within R","what":"Looping over different spatial extents","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"Specifying spafile parameter setting spatmeth parameter \"file\" overrides example output extent selected Options File. allows performing preprocessing different extents using single Options File. example:","code":"# Run the tool using the settings previously saved in a specific option file # and specifying the extent from a spatial file allows to re-use the same # processing settings to perform download and reprocessing on a different area library(MODIStsp)  opts_file    <- system.file(\"testdata/test_MOD13A2.json\", package = \"MODIStsp\") spatial_file <- system.file(\"testdata/lakeshapes/garda_lake.shp\", package = \"MODIStsp\") MODIStsp(   gui = FALSE,    opts_file = opts_file,   spatmeth = \"file\",    spafile = spatial_file,    verbose = FALSE,    parallel = FALSE )  # --> Create a character array containing a list of shapefiles (or other spatial files) extent_list <- list.files(system.file(\"testdata/lakeshapes/\", package = \"MODIStsp\"), full.names = TRUE, \"\\\\.shp$\")    extent_list  # --> Loop on the list of spatial files and run MODIStsp using each of them to  # automatically define the output extent (A separate output folder is created for # each input spatial file).  for (single_shape in extent_list) {   MODIStsp(     gui = FALSE,      opts_file = opts_file,      spatmeth = \"file\",      spafile = single_shape,      verbose = FALSE,      parallel = FALSE   ) }  # output files are placed in separate folders:   outfiles_garda <- list.files(   file.path(tempdir(), \"MODIStsp/garda_lake/VI_16Days_1Km_v61/EVI\"),   full.names = TRUE) outfiles_garda  library(raster)        plot(raster(outfiles_garda[1]))  outfiles_iseo <- list.files(   file.path(tempdir(), \"MODIStsp/iseo_lake/VI_16Days_1Km_v61/EVI\"),   full.names = TRUE) outfiles_iseo  plot(raster(outfiles_iseo[1]))"},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"scheduled-processing","dir":"Articles","previous_headings":"","what":"Scheduled Processing","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"Stand-alone non-interactive execution can used periodically automatically update time series selected product given study area. , simply: Open MODIStsp GUI, define parameters processing specifying date future “Ending Date” save processing options. quit program. Schedule non-interactive execution launcher installed seen (located subdirectory \"MODIStsp/ExtData/Launcher\" library path) windows scheduled task (linux “cron” job) according specified time schedule, specifying path previously saved Options file additional argument.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"on-linux","dir":"Articles","previous_headings":"Scheduled Processing","what":"On Linux","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"Edit crontab opening terminal type: Add entry launcher. example, installed /usr/bin want run tool every day 23.00, add following row:","code":"crontab -e 0 23 * * * /bin/bash /usr/bin/MODIStsp -g -s \"/yourpath/youroptions.json\""},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"on-windows-1","dir":"Articles","previous_headings":"Scheduled Processing","what":"On Windows","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"Create Task following instructions; add path MODIStsp.bat launcher Action (point 6), specifying -g -s \"X:/yourpath/youroptions.json\" argument.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"single-band-outputs","dir":"Articles","previous_headings":"Outputs Format and Naming Conventions","what":"Single-band outputs","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"Output raster files saved specific subfolders main output folder. particular, separate subfolder created processed original MODIS layer, Quality Indicator Spectral Index. subfolder contains one image processed date, created according following naming conventions: (e.g., myoutfolder/NDVI/MOD13Q1_NDVI_2000_065.dat) , : Layer short name describing dataset (e.g., b1_Red, NDII, UI); ProdCode code name MODIS product image derived (e.g., MOD13Q1); YYYY DOY correspond year DOY (Day Year) acquisition original MODIS image; ext file extension (.tif GTiff outputs, .dat ENVI outputs).","code":"myoutfolder/\"Layer\"/\"ProdCode\"_\"Layer\"_\"YYYY\"_\"DOY\".\"ext\""},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"virtual-multi-band-outputs","dir":"Articles","previous_headings":"Outputs Format and Naming Conventions","what":"Virtual multi-band outputs","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"ENVI /GDAL virtual time series files RasterStack RData objects instead stored “Time_Series” subfolder required. Naming convention files follow: (e.g., ///folder/Time_Series/RData/Terra/NDVI/MOD13Q1_MYD13Q1_NDVI_49_2000_353_2015_RData.RData) , : <vrt_type> indicates type virtual file (\"RData\", \"GDAL\" \"ENVI_META\"); <Sensor> indicates MODIS sensor time series belongs (\"Terra\", \"Aqua\", \"Mixed\" \"Combined\" (MCD* products)); <Layer> short name describing dataset (e.g., \"b1_Red\", \"NDII\", \"UI\"); <ProdCode> code name MODIS product image derived (e.g., \"MOD13Q1\"); <StartDOY>, <StartYear>, <EndDOY> <EndYear> indicate temporal extent time serie created; <suffix> indicates type virtual file (\"ENVI\", \"GDAL\" \"RData\"); <ext> file extension (\".vrt\" GDAL virtual files, \"META\" ENVI meta files \"RData\" R raster stacks).","code":"<path_of_out_folder>/Time_Series/<vrt_type>/<Sensor>/<Layer>/<ProdCode>_<Layer>_<StartDOY>_<StartYear>_<EndDOY>_<EndYear>_<suffix>.<ext>"},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"accessing-the-processed-time-series-from-r","dir":"Articles","previous_headings":"","what":"Accessing the processed time series from R","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"Preprocessed MODIS data can retrieved within R either accessing single-date raster files, loading saved RasterStack objects. single-date image can accessed simply opening raster command: rasterStack time series containing processed data given parameter (saved \"Time Series/RData\" subfolder - see details) can opened : second option allows accessing complete data stack analyzing using functionalities raster/raster time series analysis, extraction plotting provided example raster rasterVis packages.","code":"library(raster) modistsp_file <- \"/my_outfolder/EVI/MOD13Q1_2005_137_EVI.tif\" my_raster <- raster(modistsp_file) in_virtual_file <- \"/my_outfolder/Time_Series/RData/Terra/EVI/MOD13Q1_MYD13Q1_NDVI_49_2000_353_2015_RData.RData\"  indata          <- get(load(in_virtual_file))"},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"extracting-time-series-data-on-areas-of-interest","dir":"Articles","previous_headings":"Accessing the processed time series from R","what":"Extracting Time Series Data on Areas of Interest","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"MODIStsp provides efficient function (MODIStsp_extract()) extracting time series data specific locations. function takes input RasterStack virtual object created MODIStsp() (see ), starting ending dates extraction standard _Sp*_ object (ESRI shapefile name) specifying locations (points, lines polygons) interest, provides output xts object data.frame containing time series data locations. input class SpatialPoints, output object contains one column point specified, one row date. class SpatialPolygons (SpatialLines), contains one column polygon (line), values obtained applying function specified FUN argument (e.g., mean, standard deviation, etc.) pixels belonging polygon (touched line), one row date. example following code: loads RasterStack object containing 8-days 250 m resolution time series 2000-2015 period extracts time series average standard deviation values different polygons user’s selected shapefile 2010-2014 period.","code":"#Set the input paths to raster and shape file   infile    <- 'myoutfolder/Time_Series/RData/Mixed/MOD13Q1_MYD13Q1_NDVI_49_2000_353_2015_RData.RData'     shpname   <- 'path_to_file/rois.shp'     #Set the start/end dates for extraction   startdate <- as.Date(\"2010-01-01\")     enddate   <- as.Date(\"2014-12-31\")       #Load the RasterStack   inrts     <- get(load(infile))    # Compute average and St.dev   dataavg   <- MODIStsp_extract(inrts, shpname, startdate, enddate, FUN = 'mean', na.rm = T)   datasd    <- MODIStsp_extract (inrts, shpname, startdate, enddate, FUN = 'sd', na.rm = T)   # Plot average time series for the polygons   plot.xts(dataavg)"},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"problems-and-issues","dir":"Articles","previous_headings":"","what":"Problems and Issues","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"Solutions common installation processing problems can found MODIStsp FAQ: https://docs.ropensci.org/MODIStsp/articles/faq.html Please report issues may encounter issues page GitHub: https://github.com/ropensci/MODIStsp/issues","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/MODIStsp.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"MODIStsp: A Tool for Automatic Preprocessing of MODIS Time Series - v2.0.5","text":"cite MODIStsp please use: L. Busetto, L. Ranghetti (2016) MODIStsp: R package automatic preprocessing MODIS Land Products time series, Computers & Geosciences, Volume 97, Pages 40-48, ISSN 0098-3004, https://doi.org/10.1016/j.cageo.2016.08.020, URL: https://github.com/ropensci/MODIStsp.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/MODIStsp/articles/analyze.html","id":"accessing-the-raster-time-series","dir":"Articles","previous_headings":"","what":"Accessing the raster time series","title":"Accessing and Analyzing Processed Data from R","text":"Preprocessed MODIS data can retrieved within R either accessing single-date raster files, loading saved RasterStack objects (see description MODIStsp output folder structure naming conventions). test functionality, can run following example: download yearly time series MODIS NDVI data subset region Como Lake Italy. download processing finishes (take , depending network speed), MODIS time series placed subfolder MODIStsp/VI_16Days_500m_v61 R tempdir(). case, “file.path(tempdir(), \"VI_16Days_500m_v61\")”. want save elsewhere, run MODIStsp(opts_file = opts_file, gui = TRUE) select different output folder. Single-date processed rasters can accessed simply opening raster command:  RasterStack (GDAL vrt) time series containing processed data given parameter saved Time Series/RData subfolder, can accessed : , gives us 23-band RasterStack ts_data variable. RasterStack can analyzed using functionalities raster/raster time series analysis, extraction plotting provided example raster rasterVis packages:","code":"library(MODIStsp) opts_file <- system.file(\"testdata/test_extract.json\", package = \"MODIStsp\") MODIStsp(opts_file = opts_file, gui = FALSE, verbose = FALSE) modistsp_file <- file.path(tempdir(), \"MODIStsp/VI_16Days_500m_v61/NDVI\", \"MOD13A1_NDVI_2016_177.tif\") modistsp_file ## [1] \"/tmp/RtmplOhUZc/MODIStsp/VI_16Days_500m_v61/NDVI/MOD13A1_NDVI_2016_177.tif\" my_raster <- raster(modistsp_file) plot(my_raster) # Load the NDVI time series ts_folder <- file.path(tempdir(), \"MODIStsp/VI_16Days_500m_v61/Time_Series\") in_virtual_file <- file.path(ts_folder, \"RData/Terra/NDVI/MOD13A1_NDVI_1_2016_353_2016_RData.RData\") in_virtual_file ## [1] \"/tmp/RtmplOhUZc/MODIStsp/VI_16Days_500m_v61/Time_Series/RData/Terra/NDVI/MOD13A1_NDVI_1_2016_353_2016_RData.RData\" ts_data   <- get(load(in_virtual_file)) ts_data ## class      : RasterStack  ## dimensions : 122, 65, 7930, 23  (nrow, ncol, ncell, nlayers) ## resolution : 463.3127, 463.3127  (x, y) ## extent     : 711648.3, 741763.7, 5076054, 5132578  (xmin, xmax, ymin, ymax) ## crs        : +proj=sinu +lon_0=0 +x_0=0 +y_0=0 +R=6371007.181 +units=m +no_defs  ## names      : MOD13A1_NDVI_2016_001, MOD13A1_NDVI_2016_017, MOD13A1_NDVI_2016_033, MOD13A1_NDVI_2016_049, MOD13A1_NDVI_2016_065, MOD13A1_NDVI_2016_081, MOD13A1_NDVI_2016_097, MOD13A1_NDVI_2016_113, MOD13A1_NDVI_2016_129, MOD13A1_NDVI_2016_145, MOD13A1_NDVI_2016_161, MOD13A1_NDVI_2016_177, MOD13A1_NDVI_2016_193, MOD13A1_NDVI_2016_209, MOD13A1_NDVI_2016_225, ...  ## time        : 2016-01-01 - 2016-12-18 (range) # plot some dates plot(ts_data[[c(1,5,10,15,20)]], axes = FALSE, horizontal = T) # Extract one date from the stack  mydate   <- as.Date(\"2016-01-01\") substack <- subset(ts_data, which(getZ(ts_data) == mydate)) %>% setZ(mydate) substack ## class      : RasterLayer  ## dimensions : 122, 65, 7930  (nrow, ncol, ncell) ## resolution : 463.3127, 463.3127  (x, y) ## extent     : 711648.3, 741763.7, 5076054, 5132578  (xmin, xmax, ymin, ymax) ## crs        : +proj=sinu +lon_0=0 +x_0=0 +y_0=0 +R=6371007.181 +units=m +no_defs  ## source     : MOD13A1_NDVI_2016_001.tif  ## names      : MOD13A1_NDVI_2016_001  ## time       : 2016-01-01 # Extract multiple dates from the stack  mindate   <- as.Date(\"2016-01-01\") maxdate   <- as.Date(\"2016-04-01\") substack  <- subset(ts_data,                      which(getZ(ts_data) >= mindate & getZ(ts_data) <= maxdate)) substack ## class      : RasterStack  ## dimensions : 122, 65, 7930, 6  (nrow, ncol, ncell, nlayers) ## resolution : 463.3127, 463.3127  (x, y) ## extent     : 711648.3, 741763.7, 5076054, 5132578  (xmin, xmax, ymin, ymax) ## crs        : +proj=sinu +lon_0=0 +x_0=0 +y_0=0 +R=6371007.181 +units=m +no_defs  ## names      : MOD13A1_NDVI_2016_001, MOD13A1_NDVI_2016_017, MOD13A1_NDVI_2016_033, MOD13A1_NDVI_2016_049, MOD13A1_NDVI_2016_065, MOD13A1_NDVI_2016_081  ## time        : 2016-01-01, 2016-01-17, 2016-02-02, 2016-02-18, 2016-03-05, 2016-03-21 # Compute monthly averages  month_avg <- stackApply(ts_data, months(getZ(ts_data)), fun = mean) month_avg ## class      : RasterBrick  ## dimensions : 122, 65, 7930, 12  (nrow, ncol, ncell, nlayers) ## resolution : 463.3127, 463.3127  (x, y) ## extent     : 711648.3, 741763.7, 5076054, 5132578  (xmin, xmax, ymin, ymax) ## crs        : +proj=sinu +lon_0=0 +x_0=0 +y_0=0 +R=6371007.181 +units=m +no_defs  ## source     : memory ## names      : index_January, index_February, index_March, index_April,  index_May, index_June, index_July, index_August, index_September, index_October, index_November, index_December  ## min values :       -1891.0,        -1770.0,     -2000.0,     -1780.0,     -510.0,     -202.5,    -1347.0,       -275.0,         -1158.0,       -1944.0,        -2000.0,           -0.2  ## max values :    9130.00000,     8888.00000,  8577.00000,  8699.50000, 9231.50000, 9284.50000, 9229.50000,   9110.50000,      9187.00000,    9173.00000,     9824.00000,        0.93525 plot(month_avg, axes = FALSE, horizontal = T)"},{"path":"https://docs.ropensci.org/MODIStsp/articles/analyze.html","id":"extracting-time-series-data-on-areas-of-interest","dir":"Articles","previous_headings":"","what":"Extracting Time Series Data on Areas of Interest","title":"Accessing and Analyzing Processed Data from R","text":"MODIStsp provides efficient function (MODIStsp_extract()) extracting time series data specific locations. function takes input RasterStack virtual object created MODIStsp() (see ), starting ending dates extraction standard sp object (ESRI shapefile name) specifying locations (points, lines polygons) interest, provides output xts object data.frame containing time series data locations. input class SpatialPoints, output object contains one column point specified, one row date. class SpatialPolygons (SpatialLines), contains one column polygon (line), values obtained applying function specified “FUN” argument (e.g., mean, standard deviation, etc.) pixels belonging polygon (touched line), one row date. test MODIStsp_extract() can start loading NDVI RasterStack time series created previous example: , gives us 23-band RasterStack ts_data variable. extract NDVI data selected areas, can use MODIStsp_extract() function follows: output xts object, one column polygon input shapefile, one row date. can easily plot computed averages using:  can also transform output dataset long format use ggplot2 plotting tidyverse-friendly functions analysis:   Important note: MODIStsp_extract() usually much faster standard raster::extract() function, deal overlapping polygons. polygons overlapping, please use raster::extract() instead.","code":"ts_folder <- file.path(tempdir(), \"MODIStsp/VI_16Days_500m_v61/Time_Series\") in_virtual_file <- file.path(ts_folder, \"RData/Terra/NDVI/MOD13A1_NDVI_1_2016_353_2016_RData.RData\") ts_data   <- get(load(in_virtual_file)) ts_data ## class      : RasterStack  ## dimensions : 122, 65, 7930, 23  (nrow, ncol, ncell, nlayers) ## resolution : 463.3127, 463.3127  (x, y) ## extent     : 711648.3, 741763.7, 5076054, 5132578  (xmin, xmax, ymin, ymax) ## crs        : +proj=sinu +lon_0=0 +x_0=0 +y_0=0 +R=6371007.181 +units=m +no_defs  ## names      : MOD13A1_NDVI_2016_001, MOD13A1_NDVI_2016_017, MOD13A1_NDVI_2016_033, MOD13A1_NDVI_2016_049, MOD13A1_NDVI_2016_065, MOD13A1_NDVI_2016_081, MOD13A1_NDVI_2016_097, MOD13A1_NDVI_2016_113, MOD13A1_NDVI_2016_129, MOD13A1_NDVI_2016_145, MOD13A1_NDVI_2016_161, MOD13A1_NDVI_2016_177, MOD13A1_NDVI_2016_193, MOD13A1_NDVI_2016_209, MOD13A1_NDVI_2016_225, ...  ## time        : 2016-01-01 - 2016-12-18 (range) # load a shapefile containing polygons --> Here we use a test shapefile in  # the testdata folder of MODIStsp.  polygons <- sf::st_read(system.file(\"testdata/extract_polys.shp\",                                        package = \"MODIStsp\"),                            quiet = TRUE) polygons ## Simple feature collection with 10 features and 2 fields ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: 9.248174 ymin: 45.91182 xmax: 9.526815 ymax: 46.18547 ## Geodetic CRS:  WGS 84 ##    id      lc_type                       geometry ## 1   1        Water POLYGON ((9.27148 46.05185,... ## 2   2       Forest POLYGON ((9.3097 46.0122, 9... ## 3   3      Urban_1 POLYGON ((9.334496 45.99779... ## 4   4      Urban_2 POLYGON ((9.312293 45.9296,... ## 5   5    Grassland POLYGON ((9.496195 46.02487... ## 6   6     Cropland POLYGON ((9.441399 46.15214... ## 7   7     Forest_2 POLYGON ((9.450375 46.10248... ## 8   8      water_2 POLYGON ((9.35279 46.16475,... ## 9   9 outside_poly POLYGON ((9.498727 46.18223... ## 10 10   small_poly POLYGON ((9.364545 46.12664... # Now extract the average values for each polygon and date and plot the results  out_dataavg <- MODIStsp_extract(ts_data, polygons, id_field = \"lc_type\",                                  small = FALSE)  head(out_dataavg) ##                Water   Forest Urban_1  Urban_2 Grassland Cropland Forest_2 ## 2016-01-01  1286.000 5205.000    4249 3645.444 4118.6667 5810.769 3617.222 ## 2016-01-17  4863.333 5264.333    4636 3279.889 3305.1667 5104.769 2183.111 ## 2016-02-02 -1408.000 5773.667    4458 3276.111 2037.5000 4964.385 2849.444 ## 2016-02-18    69.680 5532.667    3795 3705.333 -409.4000 6325.692 3286.222 ## 2016-03-05  1176.000 5070.000    3972 3759.333 -374.6667 6402.231 3586.556 ## 2016-03-21  1191.143 6197.333    4506 4226.889 2841.0000 7483.077 5281.000 ##              water_2 outside_poly ## 2016-01-01 1637.2500           NA ## 2016-01-17  624.5714           NA ## 2016-02-02  207.5714           NA ## 2016-02-18 2113.1000           NA ## 2016-03-05 2195.0000           NA ## 2016-03-21  383.2857           NA # Other summarization functions can be used, by specifying the \"FUN\" argument.  # Compute the Standard Deviation over each polygon:  out_datasd <- MODIStsp_extract(ts_data, polygons, id_field = \"lc_type\",                                FUN = \"sd\", small = FALSE) library(xts) plot(out_dataavg, legend.loc = \"topleft\") library(ggplot2) out_dataavg_df <- data.frame(date = index(out_dataavg), coredata(out_dataavg)) %>%    tidyr::gather(Polygon, Value, -date)  ggplot2::ggplot(out_dataavg_df, aes(x = date, y = Value, color = Polygon)) +    geom_line() + theme_light() require(tibbletime) require(dplyr)  # Compute monthly averages using tibbletime:   out_dataavg_tt <- tibbletime::as_tbl_time(out_dataavg_df, index = date)   month_avg <- out_dataavg_tt %>%    dplyr::group_by(Polygon) %>%    tibbletime::as_period(period = \"monthly\")  ggplot2::ggplot(month_avg, aes(x = date, y = Value, color = Polygon)) +    geom_line() + theme_light()"},{"path":"https://docs.ropensci.org/MODIStsp/articles/discovered_bug.html","id":"what-is-affected","dir":"Articles","previous_headings":"","what":"What is affected","title":"Bug discovered in spectral indices computation","text":"Values following Additional Spectral Indices selectable using MODIStsp GUI: EVI SAVI , case Apply Scale/Offset option set “” Values custom spectral indexes added user, case included additive subtractive coefficients. , case Apply Scale/Offset option set “”","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/discovered_bug.html","id":"what-is-not-affected","dir":"Articles","previous_headings":"","what":"What is NOT affected","title":"Bug discovered in spectral indices computation","text":"Values spectral indexes available MODIS HDF images original sds layers (e.g., EVI MOD13Q1) Values additional / custom spectral indexes case include additive subtractive coefficients, Apply Scale/Offset option set “Yes”","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/discovered_bug.html","id":"what-to-do-if-you-are-affected","dir":"Articles","previous_headings":"","what":"What to do if you are affected","title":"Bug discovered in spectral indices computation","text":"bug now fixed GitHub version. patched release made available CRAN soon possible. Unfortunately, time series processed old version falling “affected” category, ’s nothing can , save reprocessing . truly sorry problem, somehow managed slip radar now. hope bring much trouble!","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/discovered_bug.html","id":"what-exactly-was-the-problem","dir":"Articles","previous_headings":"","what":"What exactly was the problem?","title":"Bug discovered in spectral indices computation","text":"basic can easily go unnoticed. ’s better document … MODIS reflectances stored HDF layers integers 10000 scale factor (e.g., 0.1 reflectance stored 1000). need “manually” compute index SAVI: \\(SAVI = \\frac{(\\rho_{NIR} - \\rho_{Red})}{(\\rho_{NIR} + \\rho_{Red} + 0.5)} * (1 + 0.5)\\)). starting MODIS reflectances, must take care multiplying MODIS data 10E-4 beforehand. formula becomes: \\(SAVI = \\frac{(0.0001 * b2_{NIR} - 0.0001 * b1_{Red})}{0.0001 * b2_{NIR} + 0.0001 * b1_{Red} + 0.5} * (1 + 0.5)\\)). , otherwise additive constants (case, \\(+ 0.5\\) denominator) made practically irrelevant.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/faq.html","id":"installation-problems","dir":"Articles","previous_headings":"","what":"Installation Problems","title":"Frequently Asked Questions","text":"Linux, installation fails due packages missing Windows, program hangs first interactive execution, attempting install gWisgets2RGtk2 MODIStsp hangs first execution, looking gdal installation Installing github fails due missing dependencies","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/faq.html","id":"on-windows-modistsp-fails-to-install-signaling-problems-in-installation-of-either-gwidgetsrgtk2-or-rgtk2","dir":"Articles","previous_headings":"Installation Problems","what":"- On Windows, MODIStsp fails to install, signaling problems in installation of either gwidgetsRGtk2 or RGtk2","title":"Frequently Asked Questions","text":"Please try install package gwidgetsRGtk2 beforehand using: probably get errors/problems installation: please see instructions next point !","code":"install.packages(\"gwidgetsRGtk2\")"},{"path":"https://docs.ropensci.org/MODIStsp/articles/faq.html","id":"on-windows-modistsp-hangs-at-first-interactive-execution-while-attempting-to-install-gwisgetsrgtk2","dir":"Articles","previous_headings":"Installation Problems","what":"- On Windows, MODIStsp hangs at first interactive execution, while attempting to install gWisgetsRGtk2","title":"Frequently Asked Questions","text":"first interactive execution (.e., “gui = TRUE) MODIStsp, error window may appear, signaling libatk-1.0-0.dll missing system. due fact library”GTK+“” yet installed system needs installed. , press “OK”. new window dialog window appear, asking want install “GTK+”. Select “Install GTK+” “OK”. Windows download install GTK+ library. finishes, R Session restarted next MODIStsp go well ! case RStudio automatically restart installing GTK+, simply kill form “Task Manager” reload RStudio. still problems, try install GTK+ library independently, following instructions reported : https://www.stat.auckland.ac.nz/%7Ekimihia/rgtk2 , starting “Download GTK+ --one bundle. downloaded version 2.22 Windows 64-bit.”. try install gWisgetsRGtk2 MODIStsp explained point .","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/faq.html","id":"on-linux-installation-fails-due-to-some-packages-missing","dir":"Articles","previous_headings":"Installation Problems","what":"- On Linux, installation fails due to some packages missing","title":"Frequently Asked Questions","text":"Please Install following required dependencies: * Cairo >= 1.0.0, ATK >= 1.10.0, Pango >= 1.10.0, GTK+ >= 2.8.0, GLib >= 2.8.0 (required package RGtk2) * Curl (required package curl) * GDAL >= 1.6.3, PROJ.4 >= 4.4.9 (required package sf) Debian Ubuntu-based systems, install packages open terminal type: rpm-based systems, install packages open terminal type; others distros: test installation distros yet - experience problems please contact us.","code":"sudo apt-get install r-cran-cairodevice r-cran-rgtk2 libcairo2-dev libatk1.0-dev libpango1.0-dev    libgtk2.0-dev libglib2.0-dev libcurl4-openssl-dev libgdal-dev libproj-dev sudo yum install libcairo2-devel libatk1.0-devel libpango1.0-devel gtk2 gtk2-devel     glib2-devel libcurl4-devel gdal-devel proj-devel"},{"path":"https://docs.ropensci.org/MODIStsp/articles/faq.html","id":"modistsp-hangs-at-first-execution-while-looking-for-gdal-installation","dir":"Articles","previous_headings":"Installation Problems","what":"- MODIStsp hangs at first execution, while looking for gdal installation","title":"Frequently Asked Questions","text":"first execution MODIStsp searches valid GDAL installation. nothing happens long time (e.g., several minutes), MODIStsp (particular gdalUtils package relies) finding valid GDAL installation common locations. solve problem: Ensure GDAL properly installed system. See main MODIStsp github page simple instructions (Windows) installed, verify GDAL system PATH, GDAL_DATA environment variable correctly set (can find simple instructions ) (gdal correctly installed path set, opening windows shell (“cmd”) issuing “gdalinfo” command result error !) nothing works, please report issue : https://github.com/ropensci/MODIStsp/issues","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/faq.html","id":"installing-from-github-fails-due-to-missing-dependencies","dir":"Articles","previous_headings":"Installation Problems","what":"- Installing from github fails due to missing dependencies","title":"Frequently Asked Questions","text":"currently problems installing MODIStsp via install_github R >= 3.3.1 due correct installation dependencies (related bug CRAN version install_github). Installing development version devtools solve issue. , clean R/RStudio session : , continue standard MODIStsp installation. problems installing “devel” version devtools, manually installing dependencies also solve issue. , please try : , continue standard MODIStsp installation. still don’t succeed, please contact us !","code":"install.packages(\"devtools\")   devtools::install_github(\"hadley/devtools\")   library(devtools) install.packages(c(\"bitops\", \"data.table\" , \"gdalUtilities\", \"gWidgets\", \"gWidgetsRGtk2\",   \"httr\" , \"jsonlite\", \"parallel\", \"raster\", \"sf\", \"stringr\", \"xts\"))"},{"path":"https://docs.ropensci.org/MODIStsp/articles/faq.html","id":"data-download-problems","dir":"Articles","previous_headings":"","what":"Data download Problems","title":"Frequently Asked Questions","text":"‘http’ download, files getting downloaded, get ‘timeout’ problems","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/faq.html","id":"on-http-download-files-are-not-getting-downloaded-or-you-get-timeout-problems","dir":"Articles","previous_headings":"Data download Problems","what":"- On ‘http’ download, files are not getting downloaded, OR you get ‘timeout’ problems","title":"Frequently Asked Questions","text":"Visit earthdata “profile” page, click “Applications” ensure “LP DAAC Data Pool” authorized. , click “Approve Applications”, search list approve . Verify username password provided correct (can obtained registering account : https://urs.earthdata.nasa.gov/profile.); Wednesday ??? , NASA http server may maintenance. Try switching “ftp” download; cases, access http server seems allowed (don’t know - maybe firewalling). Try switching ftp download.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/faq.html","id":"files-are-not-getting-downloaded-on-either-http-or-ftp-and-you-get-continuous-timeout-problems","dir":"Articles","previous_headings":"Data download Problems","what":"- Files are not getting downloaded on either “http” or “ftp”, and you get continuous ‘timeout’ problems","title":"Frequently Asked Questions","text":"’re connecting internet via proxy, download fail. solve problem, identify IP address port proxy, running MODIStsp, run following instructions: (substitute XXX.XXX.XXX.XXX YYYY IP address port number proxy, respectively) connection slow, get frequent timeout problems MODIStsp fetches list files available NASA archives. problem pronounced ftp download, switching http may good idea !","code":"library(httr)     set_config(use_proxy(url=\"XXX.XXX.XXX.XXX\", port=YYYY))"},{"path":"https://docs.ropensci.org/MODIStsp/articles/faq.html","id":"no-luck-nothing-worked","dir":"Articles","previous_headings":"Data download Problems","what":"- No luck ! Nothing worked","title":"Frequently Asked Questions","text":"nothing solves problem, please report issue : https://github.com/ropensci/MODIStsp/issues","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/faq.html","id":"processing-problems","dir":"Articles","previous_headings":"","what":"Processing Problems","title":"Frequently Asked Questions","text":"MODIStsp fails processing product MxDyyy can’t find processed files Working already downloaded hdf files","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/faq.html","id":"modistsp-fails-while-processing-product-mxdyyy","dir":"Articles","previous_headings":"Processing Problems","what":"- MODIStsp fails while processing product MxDyyy","title":"Frequently Asked Questions","text":"Although tried test functionality products, bugs may still present specific products, due complexity variability MODIS hdfs structure. case, please report issue : https://github.com/ropensci/MODIStsp/issues","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/faq.html","id":"wherehow-can-i-access-the-processed-data","dir":"Articles","previous_headings":"Processing Problems","what":"- Where/How can I access the processed data ?","title":"Frequently Asked Questions","text":"Please see ","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/faq.html","id":"working-with-already-downloaded-hdf-files","dir":"Articles","previous_headings":"Processing Problems","what":"- Working with already downloaded hdf files","title":"Frequently Asked Questions","text":"wish use MODIStsp process MODIS hdf images already downloaded NASA servers, proceed like : Place hdf files folder choice (e.g., “D:\\myfolder\\mydir\\hdf_modis”). images must reside root folder (.e., subfolders) Open MODIStsp GUI set processing parameters analysis still download data. particular, sure : select product corresponding hdf images top GUI (e.g., MOD13Q1 v006), set processing layers wish analyze; set processing period available images; Set spatial extent available images. minimum requirement set Horizontal Vertical “Required MODIS tiles” correspond imagery. also specify bounding box output, considered creating outputs. Set “download method” either: http/ftp: want MODIStsp check images selected product time period already available PC. MODIStsp take care downloading missing image (.e., forgot download something, processing period provided larger “covered” images already ). offline: just want process images . case, MODIStsp even connect NASA servers, just process images finds “hdf folder” satisfy processing parameters specified (clear: folder MOD13Q1 images, GUI set process MOD09A1 data, nothing happen. Analogously, imagery 2003 2009, set processing period 2010 2015 nothing happen) Set “Output Folder Original HDF files download” folder containing hdf images, “Main Output Folder Time Series storage folder want store results processing. Start processing.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/faq.html","id":"other-problems","dir":"Articles","previous_headings":"","what":"Other Problems","title":"Frequently Asked Questions","text":"Please report issues https://github.com/ropensci/MODIStsp/issues","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/installation.html","id":"installing-on-windows","dir":"Articles","previous_headings":"","what":"Installing on Windows","title":"Installation","text":"can install stable version MODIStsp CRAN: install.packages(\"MODIStsp\") , development version (containing latest improvements bug fixes) GitHub:","code":"install.packages(\"remotes\") library(remotes) install_github(\"ropensci/MODIStsp\")"},{"path":"https://docs.ropensci.org/MODIStsp/articles/installation.html","id":"installing-on-linux-systems","dir":"Articles","previous_headings":"","what":"Installing on Linux Systems","title":"Installation","text":"install MODIStsp Linux, need able install sf package, requires several dependencies. See trouble installing sf. addition, need install dependencies required protolite package, required geojson. See instructions installing . , can install stable version MODIStsp CRAN: , development version (containing latest improvements bug fixes) GitHub: Notice , order able read input HDF4 MODIS archives, GDAL installation must support HDF4 format. can check command: , return TRUE. OS includes GDAL distribution supports format, (e.g. ArchLinux, see ).","code":"install.packages(\"MODIStsp\") library(devtools) install_github(\"ropensci/MODIStsp\") \"HDF4\" %in% sf::st_drivers(\"raster\")$name"},{"path":"https://docs.ropensci.org/MODIStsp/articles/installation.html","id":"installing-on-mac","dir":"Articles","previous_headings":"","what":"Installing on Mac","title":"Installation","text":"install MODIStsp MacOS, need able install sf package, requires gdal installed. See trouble installing sf. , can install stable version MODIStsp CRAN: , development version (containing latest improvements bug fixes) GitHub:","code":"install.packages(\"MODIStsp\") library(devtools) install_github(\"ropensci/MODIStsp\")"},{"path":[]},{"path":"https://docs.ropensci.org/MODIStsp/articles/interactive_execution.html","id":"product-and-layers-tab","dir":"Articles","previous_headings":"Selecting Processing Parameters","what":"Product and Layers Tab","title":"Running the tool in Interactive Mode: the MODIStsp GUI","text":"top-tab allow specify details desired MODIS Product Layers processed: “Category” “Product”: selects MODIS product interest; MODIS platform(s): selects TERRA, AQUA MODIS platforms considered download creation time series; left-hand selector allows select original MODIS layers processed; central selector allows select Quality Indicators extracted original MODIS Quality Assurance layers; MODIS products containing surface reflectance data, right-hand selector allows selecting additional Spectral Indexes computed. following commonly used Spectral Indexes available computation default:  can however specify SIs computed without modifying MODIStsp source code clicking “Add New Spectral Index” button, allow providing info related new desired SI using simple GUI interface.  Provided information (e.g., correct band-names, computable formula, etc…) automatically checked upon clicking “Set New Index”. success, new index added list available ones products allowing computation. Clicking “Done!” returns main. Note: custom defined indexes can removed using MODIStsp_resetindexes() function.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/interactive_execution.html","id":"spatialtemporal-options-tab","dir":"Articles","previous_headings":"Selecting Processing Parameters","what":"Spatial/Temporal Options Tab","title":"Running the tool in Interactive Mode: the MODIStsp GUI","text":"middle tab allow specifying details temporal spatial extent analysis.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/interactive_execution.html","id":"temporal-extent","dir":"Articles","previous_headings":"Selecting Processing Parameters > Spatial/Temporal Options Tab","what":"Temporal Extent","title":"Running the tool in Interactive Mode: the MODIStsp GUI","text":"Specify starting ending dates considered creation time series corresponding fields. Date Range Type drop-menu allows choose two options: full: available images starting ending dates downloaded processed; seasonal: data downloaded one part year, multiple years. example, starting date 2005-03-01 ending 2010-06-01, images March, April May years 2005 2010 downloaded. allows easily process data concerning particular season interest.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/interactive_execution.html","id":"output-projection","dir":"Articles","previous_headings":"Selecting Processing Parameters > Spatial/Temporal Options Tab","what":"Output Projection","title":"Running the tool in Interactive Mode: the MODIStsp GUI","text":"Specify options used reprojecting resizing MODIS images. “Output Projection”: select either Native MODIS projection (Default) specify user-defined one. specify user selected projection, select “Change” insert valid “EPSG” code WKT string pop-window. Validity new projection string automatically checked, error messages issued check fails. “Output Resolution”, “Pixel Size” “Resampling Method”: specify whether output images inherit spatial resolution original MODIS files, resampled user-defined resolution. latter case, output spatial resolution must specified measure units selected output projection. Resampling method can chosen among ones available “gdalwarp” routine. Note: resampling methods different Nearest Neighbour” “Mode” (Useful -sampling purposes) used carefully. resampling methods (e.g., bilinear, cubic) ) used resampling categorical variables QA QI layers, ii) using continuous variable (e.g., reflectance, VI values) without performing -priori data cleaning risk contaminate values high-quality observations low-quality ones.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/interactive_execution.html","id":"spatial-extent","dir":"Articles","previous_headings":"Selecting Processing Parameters > Spatial/Temporal Options Tab","what":"Spatial Extent","title":"Running the tool in Interactive Mode: the MODIStsp GUI","text":"Allows defining area interest processing. Four main options possible, can selected using dropdown menu. Select Tiles: specify MODIS tiles need processed either : Using “Start” “End” horizontal vertical sliders Required MODIS Tiles frame. Selecting “Map” option dropdown clicking “change selection”. map open, allowing interactive selection required tiles Note processing, data different tiles mosaicked, single file covering total area produced acquisition date. reason, selected tiles must cover rectangular area. Select Bounding Box: manually insert coordinates Upper Left Lower Right corners area interest Bounding Box frame. Coordinates corners must provided coordinate system selected output projection. Load File: click “Browse” button select raster vector spatial file used compute required bounding box output projection coordinates. Draw Map: click “Draw Extent” button map open window, allowing interactive selection spatial extent using tools left.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/interactive_execution.html","id":"output-format-options-and-folders-tab","dir":"Articles","previous_headings":"Selecting Processing Parameters","what":"Output Format, Options and Folders Tab","title":"Running the tool in Interactive Mode: the MODIStsp GUI","text":"last tab allows specifying options concerning processing, output folders.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/interactive_execution.html","id":"download-method","dir":"Articles","previous_headings":"Selecting Processing Parameters > Output Format, Options and Folders Tab","what":"Download Method","title":"Running the tool in Interactive Mode: the MODIStsp GUI","text":"Select method used download. Available choices : http: download http NASA lpdaac http archive (http://e4ftl01.cr.usgs.gov). requires providing user name password, can obtained registering account address https://urs.earthdata.nasa.gov/profile; offline: option allows process/reprocess HDF files already available user’s PC without downloading NASA – useful user already archive HDF images, reprocess data already downloaded via MODIStsp() create time series additional layer (fundamental HDFs directly downloaded NASA servers; see additional details). second dropdown menu allows selecting using standard http download access NASA servers, using aria2c downloader, may speed-download. requires however “aria2c” software installed system. download install , see aria2.github.io.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/interactive_execution.html","id":"output-options","dir":"Articles","previous_headings":"Selecting Processing Parameters > Output Format, Options and Folders Tab","what":"Output Options","title":"Running the tool in Interactive Mode: the MODIStsp GUI","text":"Several processing options can set using check-boxes/dropdowns: Output Files Format: two commonly formats used remote sensing applications available moment: ENVI binary GeoTiff. GeoTiff selected, type file compression can also specified among “None”, “PACKBITS”, “LZW” “DEFLATE”. Save Time Series : specify virtual multitemporal files created. virtual files allow access entire time series images single file without need creating large multitemporal raster images. Available virtual files formats “R” rasterStacks, ENVI meta-files GDAL “vrt” files. particular, R RasterStacks may useful order easily access preprocessed MODIS data within R scripts (see also ). Apply Scale/Offset: specify scale offset values different MODIS layers applied. selected, outputs appropriately rescaled fly, saved true “measure units” selected parameter (e.g., spectral indexes saved floating point values; Land Surface Temperature saved degrees Kelvin, etc.). Modify Data Values: specify NoData values MODIS layers kept original values, changed specified within MODIStsp_Products_Opts XML file. selecting “Yes” “Change Original NoData values” check-box, NoData outputs set largest integer value possible data type processed layer (e.g., 8-bit unsigned integer layers, NoData set always 255, 16-bit signed integer layers 32767, 16-bit unsigned integer layers 65535). Information new NoData values stored output rasters, XML files associated . Note: MODIS layers multiple NoData (.k.. fill) values. Modify Data set “Yes”, MODIStsp() convert fill values common output NoData value.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/MODIStsp/articles/interactive_execution.html","id":"main-modistsp-output-folder","dir":"Articles","previous_headings":"Selecting Processing Parameters > Output Format, Options and Folders Tab > Output Folders","what":"Main MODIStsp Output Folder","title":"Running the tool in Interactive Mode: the MODIStsp GUI","text":"Select main folder pre-processed time series data stored. MODIStsp() outputs placed specific sub-folders main folder (see details MODIStsp naming conventions). “Reprocess” selector allows decide images already available reprocessed new run MODIStsp() launched output folder. set “”, MODIStsp() skips dates output files following MODIStsp naming conventions already present output folder. allows incrementally extend MODIS time series without reprocessing already available dates.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/interactive_execution.html","id":"output-folder-for-storage-of-original-modis-hdf","dir":"Articles","previous_headings":"Selecting Processing Parameters > Output Format, Options and Folders Tab > Output Folders","what":"Output Folder for storage of original MODIS HDF","title":"Running the tool in Interactive Mode: the MODIStsp GUI","text":"Select folder downloaded original MODIS HDF files downloaded NASA servers stored. “delete HDF” selector allows also decide downloaded images deleted file system end processing. avoid accidental file deletion, always set “” default, warning issued execution whenever selection changed “Yes”.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/interactive_execution.html","id":"saving-and-loading-processing-options","dir":"Articles","previous_headings":"","what":"Saving and Loading Processing Options","title":"Running the tool in Interactive Mode: the MODIStsp GUI","text":"Specified processing parameters can saved JSON file later use clicking Save Options button sidebar. Previously saved options can restored clicking Load Options button navigating previously saved JSON file.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/interactive_execution.html","id":"starting-the-processing","dir":"Articles","previous_headings":"","what":"Starting the processing","title":"Running the tool in Interactive Mode: the MODIStsp GUI","text":"happy choices, click Run MODIStsp. MODIStsp() start accessing NASA servers download process MODIS data corresponding choices. date specified time period, MODIStp() downloads preprocesses HDF images required cover desired spatial extent. Informative messages concerning status processing provided console, well self-updating progress window. processed time series saved specific subfolders main selected output folder, explained detail .","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/noninteractive_execution.html","id":"specifying-the-processing-parameters-in-the-function-call","dir":"Articles","previous_headings":"","what":"Specifying the processing parameters in the function call","title":"Non-Interactive Execution from within R","text":"processing parameters can set call MODIStsp(). Mandatory parameters selprod (specifying MODIS product), (one ) bandsel, quality_bandsel indexes_bandsel (specify desired output layers), out_folder, start_date end_date. user password also needed download_server equal \"offline\". new function MODIStsp_get_prodlayers() allows easily retrieving names products available layers based product code, : parameters set automatically default values (see MODIStsp() documentation details different available function arguments). example, following code processes layers NDVI EVI quality indicator usefulness product __M*D13Q1__, considering Terra Aqua platforms, dates comprised 2020-06-01 2020-06-15 saves output R tempdir():","code":"library(MODIStsp)  MODIStsp_get_prodlayers(\"M*D13Q1\") ## $prodname ## [1] \"Vegetation Indexes_16Days_250m (M*D13Q1)\" ##  ## $bandnames ##  [1] \"NDVI\"     \"EVI\"      \"VI_QA\"    \"b1_Red\"   \"b2_NIR\"   \"b3_Blue\"  ##  [7] \"b7_SWIR\"  \"View_Zen\" \"Sun_Zen\"  \"Rel_Az\"   \"DOY\"      \"Rely\"     ##  ## $bandfullnames ##  [1] \"16 day NDVI average\"                \"16 day EVI average\"                 ##  [3] \"VI quality indicators\"              \"Surface Reflectance Band 1\"         ##  [5] \"Surface Reflectance Band 2\"         \"Surface Reflectance Band 3\"         ##  [7] \"Surface Reflectance Band 7\"         \"View zenith angle of VI pixel\"      ##  [9] \"Sun zenith angle of VI pixel\"       \"Relative azimuth angle of VI pixel\" ## [11] \"Day of year of VI pixel\"            \"Quality reliability of VI pixel\"    ##  ## $quality_bandnames ## [1] \"QA_qual\"     \"QA_usef\"     \"QA_aer\"      \"QA_adj_cld\"  \"QA_BRDF\"     ## [6] \"QA_mix_cld\"  \"QA_land_wat\" \"QA_snow_ice\" \"QA_shd\"      ##  ## $quality_fullnames ## [1] \"VI Quality\"                           ## [2] \"VI usefulness\"                        ## [3] \"Aerosol quantity\"                     ## [4] \"Adjacent cloud detected\"              ## [5] \"Atmosphere BRDF correction performed\" ## [6] \"Mixed Clouds\"                         ## [7] \"Land/Water Flag\"                      ## [8] \"Possible snow/ice\"                    ## [9] \"Possible shadow\"                      ##  ## $indexes_bandnames ## [1] \"SR\"    \"NDFI\"  \"NDII7\" \"SAVI\"  ##  ## $indexes_fullnames ## [1] \"Simple Ratio (NIR/Red)\"               ## [2] \"Flood Index (Red-SWIR2)/(Red+SWIR2)\"  ## [3] \"NDII7 (NIR-SWIR2)/(NIR+SWIR2)\"        ## [4] \"SAVI (NIR-Red)/(NIR+Red+0.5)*(1+0.5)\" library(MODIStsp)   # **NOTE** Output files of examples are saved to file.path by setting out_folder to \"$tempdir\".  # --> See name and available layers for product M*D13Q1 # MODIStsp_get_prodlayers(\"M*D13A2\")  # --> Launch the processing MODIStsp(gui             = FALSE,           out_folder      = \"$tempdir\",           selprod         = \"Vegetation_Indexes_16Days_1Km (M*D13A2)\",          bandsel         = c(\"EVI\", \"NDVI\"),           quality_bandsel = \"QA_usef\",           indexes_bandsel = \"SR\",           user            = \"mstp_test\" ,          password        = \"MSTP_test_01\",          start_date      = \"2020.06.01\",           end_date        = \"2020.06.15\",           verbose         = FALSE)  # Outputs are in this case in subfolder \"MODIStsp/VI_16Days_1Km_v61\" of  # `base::tempdir()`:   out_fold <- file.path(tempdir(), \"MODIStsp/VI_16Days_1Km_v61/\")  list.files(out_fold) ## [1] \"EVI\"         \"NDVI\"        \"QA_usef\"     \"SR\"          \"Time_Series\" list.files(file.path(out_fold ,\"EVI\")) ## [1] \"MOD13A2_EVI_2020_161.tif\" \"MYD13A2_EVI_2020_153.tif\" list.files(file.path(out_fold ,\"QA_usef\")) ## [1] \"MOD13A2_QA_usef_2020_161.tif\" \"MYD13A2_QA_usef_2020_153.tif\""},{"path":"https://docs.ropensci.org/MODIStsp/articles/noninteractive_execution.html","id":"launching-modistsp-using-a-saved-options-file","dir":"Articles","previous_headings":"","what":"Launching MODIStsp using a saved “Options file”","title":"Non-Interactive Execution from within R","text":"Alternatively, can run MODIStsp() without opening GUI specifying previously saved options file:","code":"library(MODIStsp)   # **NOTE** Output files of examples are saved to file.path(tempdir(), \"MODIStsp\").  # --> Specify the path to a valid options file saved in advance from MODIStsp GUI  # Here we use a test json file saved in MODIStsp installation folder which # downloads and processed 3 MOD13A2 images over the Como Lake (Lombardy, Italy) # and retrieves NDVI and EVI data, plus the Usefulness Index Quality Indicator.  opts_file <- system.file(\"testdata/test_MOD13A2.json\", package = \"MODIStsp\")  # --> Launch the processing MODIStsp(gui = FALSE, opts_file = opts_file, verbose = FALSE)  # Outputs are in this case in subfolder \"MODIStsp/VI_16Days_1Km_v61\" of  # `base::tempdir()`:   out_fold <- file.path(tempdir(), \"MODIStsp/VI_16Days_1Km_v61\")  list.files(out_fold) ## [1] \"EVI\"         \"NDVI\"        \"QA_usef\"     \"SR\"          \"Time_Series\" list.files(file.path(out_fold ,\"EVI\")) ## [1] \"MOD13A2_EVI_2016_161.tif\" \"MOD13A2_EVI_2016_177.tif\" ## [3] \"MOD13A2_EVI_2020_161.tif\" \"MYD13A2_EVI_2020_153.tif\""},{"path":"https://docs.ropensci.org/MODIStsp/articles/noninteractive_execution.html","id":"looping-over-different-options-files","dir":"Articles","previous_headings":"Launching MODIStsp using a saved “Options file”","what":"Looping over different Options files","title":"Non-Interactive Execution from within R","text":"need process different MODIS products, can prepare beforehand different MODIStsp() options files using GUI, loop like :","code":"opts_files <- c(system.file(\"testdata/test_MOD13A2.json\", package = \"MODIStsp\"),                  system.file(\"testdata/test_MOD10A2.json\", package = \"MODIStsp\"))  for (opts_file in opts_files) {   MODIStsp(gui       = FALSE,             opts_file = opts_file,             verbose   = FALSE) }  # MOD13A2 ouputs out_fold <- file.path(tempdir(), \"MODIStsp/VI_16Days_1Km_v61\")  list.files(out_fold) ## [1] \"EVI\"         \"NDVI\"        \"QA_usef\"     \"SR\"          \"Time_Series\" list.files(file.path(out_fold ,\"NDVI\")) ## [1] \"MOD13A2_NDVI_2016_161.tif\" \"MOD13A2_NDVI_2016_177.tif\" ## [3] \"MOD13A2_NDVI_2020_161.tif\" \"MYD13A2_NDVI_2020_153.tif\" # MOD10A2 ouputs out_fold <- file.path(tempdir(), \"MODIStsp/Surf_Temp_8Days_1Km_v61\")  list.files(out_fold) ## [1] \"Days_Clear\"    \"LST_Day_1km\"   \"LST_Night_1km\" \"Time_Series\" list.files(file.path(out_fold ,\"LST_Night_1km\")) ## [1] \"MOD11A2_LST_Night_1km_2016_153.tif\" \"MOD11A2_LST_Night_1km_2016_161.tif\" ## [3] \"MOD11A2_LST_Night_1km_2016_169.tif\" \"MOD11A2_LST_Night_1km_2016_177.tif\""},{"path":"https://docs.ropensci.org/MODIStsp/articles/noninteractive_execution.html","id":"specifying-the-processing-parameters-using-a-previously-saved-options-file-and-overwriting-some-parameters","dir":"Articles","previous_headings":"","what":"Specifying the processing parameters using a previously saved options file and overwriting some parameters","title":"Non-Interactive Execution from within R","text":"Finally, possible specify previously saved options file setting parameters call function. allows easily performing similar processings, updating required arguments, examples .","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/noninteractive_execution.html","id":"looping-over-different-spatial-extents","dir":"Articles","previous_headings":"Specifying the processing parameters using a previously saved options file and overwriting some parameters","what":"Looping over different spatial extents","title":"Non-Interactive Execution from within R","text":"Specifying spafile parameter setting spatmeth parameter “file” overrides example output extent selected Options File. allows performing preprocessing different extents using single Options File. example:","code":"# Run the tool using the settings previously saved in a specific option file # and specifying the extent from a spatial file allows to re-use the same # processing settings to perform download and reprocessing on a different area library(MODIStsp)  opts_file    <- system.file(\"testdata/test_MOD13A2.json\", package = \"MODIStsp\") spatial_file <- system.file(\"testdata/lakeshapes/garda_lake.shp\", package = \"MODIStsp\") MODIStsp(gui       = FALSE,           opts_file = opts_file,          spatmeth  = \"file\",           spafile   = spatial_file,           verbose   = FALSE)  # --> Create a character array containing a list of shapefiles (or other spatial files) extent_list <- list.files(system.file(\"testdata/lakeshapes/\", package = \"MODIStsp\"), full.names = TRUE, \"\\\\.shp$\")    extent_list ## [1] \"/usr/local/lib/R/site-library/MODIStsp/testdata/lakeshapes//garda_lake.shp\" ## [2] \"/usr/local/lib/R/site-library/MODIStsp/testdata/lakeshapes//iseo_lake.shp\" # --> Loop on the list of spatial files and run MODIStsp using each of them to  # automatically define the output extent (A separate output folder is created for # each input spatial file).  for (single_shape in extent_list) {   MODIStsp(gui       = FALSE,             opts_file = opts_file,             spatmeth  = \"file\",             spafile   = single_shape,             verbose   = FALSE) }  # output files are placed in separate folders:   outfiles_garda <- list.files(   file.path(tempdir(), \"MODIStsp/garda_lake/VI_16Days_1Km_v61/EVI\"),   full.names = TRUE) outfiles_garda ## [1] \"/tmp/Rtmp0rOqgP/MODIStsp/garda_lake/VI_16Days_1Km_v61/EVI/MOD13A2_EVI_2016_161.tif\" ## [2] \"/tmp/Rtmp0rOqgP/MODIStsp/garda_lake/VI_16Days_1Km_v61/EVI/MOD13A2_EVI_2016_177.tif\" library(raster)        plot(raster(outfiles_garda[1])) outfiles_iseo <- list.files(   file.path(tempdir(), \"MODIStsp/iseo_lake/VI_16Days_1Km_v61/EVI\"),   full.names = TRUE) outfiles_iseo ## [1] \"/tmp/Rtmp0rOqgP/MODIStsp/iseo_lake/VI_16Days_1Km_v61/EVI/MOD13A2_EVI_2016_161.tif\" ## [2] \"/tmp/Rtmp0rOqgP/MODIStsp/iseo_lake/VI_16Days_1Km_v61/EVI/MOD13A2_EVI_2016_177.tif\" plot(raster(outfiles_iseo[1]))"},{"path":"https://docs.ropensci.org/MODIStsp/articles/output.html","id":"single-band-outputs","dir":"Articles","previous_headings":"","what":"Single-band outputs","title":"Outputs Format and Naming Conventions","text":"Output raster files saved specific subfolders main output folder. particular, separate subfolder created processed original MODIS layer, Quality Indicator Spectral Index. subfolder contains one image processed date, created according following naming conventions: , : ProdName short name describing MODIS product datasets derived (e.g., VI_16Days_1Km_v61); Layer short name describing dataset (e.g., b1_Red, NDII, UI); ProdCode code name MODIS product image derived (e.g., MOD13Q1 - Note choose process “Terra” “Aqua” data, data coming either platform placed folder example “MOD13Q1…” “MYD13Q1…” files output folder); YYYY DOY correspond year DOY (Day Year) acquisition original MODIS image; ext file extension (.tif GTiff outputs, .dat ENVI outputs). , example, process layers “NDVI” “EVI” MODIS product MOD13A2 find resulting GTiff ENVI output single-date rasters : ","code":"myoutfolder/\"ProdName\"/\"Layer\"/\"ProdCode\"_\"Layer\"_\"YYYY\"_\"DOY\".\"ext\" /your_out_folder/VI_16Days_1Km_v61/NDVI/ /your_out_folder/VI_16Days_1Km_v61/EVI/"},{"path":"https://docs.ropensci.org/MODIStsp/articles/output.html","id":"virtual-multi-band-outputs","dir":"Articles","previous_headings":"","what":"Virtual multi-band outputs","title":"Outputs Format and Naming Conventions","text":"ENVI /GDAL virtual time series files RasterStack RData objects instead stored “Time_Series” subfolder required. Naming conventions files follow: , : <vrt_type> indicates type virtual file (\"RData\", \"GDAL\" \"ENVI_META\"); <Sensor> indicates MODIS sensor time series belongs (\"Terra\", \"Aqua\", \"Mixed\" \"Combined\" (MCD* products)); <Layer> short name describing dataset (e.g., \"b1_Red\", \"NDII\", \"UI\"); <ProdCode> code name MODIS product image derived (e.g., \"MOD13Q1\"); <StartDOY>, <StartYear>, <EndDOY> <EndYear> indicate temporal extent time serie created; <suffix> indicates type virtual file (\"ENVI\", \"GDAL\" \"RData\"); <ext> file extension (\".vrt\" GDAL virtual files, \"META\" ENVI meta files \"RData\" R raster stacks). , example, process layer “NDVI” MODIS product MOD13A2 platform “Terra”, ask create “R rasterStacks” “GDAL vrt” time series find resulting GTiff virtual files : ","code":"<path_of_out_folder>/Time_Series/<vrt_type>/<Sensor>/<Layer>/<ProdCode>_<Layer>_<StartDOY>_<StartYear>_<EndDOY>_<EndYear>_<suffix>.<ext> /your_out_folder/VI_16Days_1Km_v61/Time_Series/RData/Terra/NDVI /your_out_folder/VI_16Days_1Km_v61/Time_Series/GDAL/Terra/NDVI"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/MODIStsp/articles/standalone_execution.html","id":"stand-alone-execution","dir":"Articles","previous_headings":"","what":"Stand-alone execution","title":"Stand-alone execution and scheduled processing","text":"MODIStsp can also executed “stand-alone” application (.e., without open R/RStudio). able , R launch function install_MODIStsp_launcher(). Linux operating system function creates desktop entry (accessible menu sections “Science” “Geography”) symbolic link known path (default: /usr/bin/MODIStsp). Windows, link Start Menu optionally desktop shortcut created. See ?install_MODIStsp_launcher details path customization. Double-clicking files launching shell without parameters launch MODIStsp() interactive mode, opening GUI. Non-interactive mode can triggered adding “-g” argument call, specifying path valid Options File -s argument: Linux: MODIStsp -g -s \"/yourpath/youroptions.json\" (see MODIStsp -h details). Windows:your_r_library\\MODIStsp\\ExtData\\Launcher\\MODIStsp.bat -g -s \"yourpath/youroptions.json\" (see C:\\Users\\\\Desktop\\MODIStsp -h details). want install link, launchers can found subdirectory MODIStsp/ExtData/Launcher library path.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/standalone_execution.html","id":"scheduled-processing","dir":"Articles","previous_headings":"","what":"Scheduled Processing","title":"Stand-alone execution and scheduled processing","text":"Stand-alone non-interactive execution can exploited periodically automatically update time series selected product given study area. , simply follow steps. Open MODIStsp() GUI, define parameters processing specifying date future “Ending Date” save processing options; quit program. schedule non-interactive execution MODIStsp launcher script installed seen (located subdirectory MODIStsp/ExtData/Launcher R library path) windows scheduled task linux “cron” job according specified time schedule, specifying path previously saved Options file additional argument.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/articles/standalone_execution.html","id":"on-linux","dir":"Articles","previous_headings":"Scheduled Processing","what":"On Linux","title":"Stand-alone execution and scheduled processing","text":"Edit crontab opening terminal typing: Add entry execution MODIStsp launcher. example, installed /usr/bin want run tool every day 23.00, add following row:","code":"crontab -e 0 23 * * * /bin/bash /usr/bin/MODIStsp -g -s \"/yourpath/youroptions.json\""},{"path":"https://docs.ropensci.org/MODIStsp/articles/standalone_execution.html","id":"on-windows","dir":"Articles","previous_headings":"Scheduled Processing","what":"On Windows","title":"Stand-alone execution and scheduled processing","text":"Create Task following instructions. Add path MODIStsp.bat launcher Action (point 6), specifying -g -s \"X:/yourpath/youroptions.json\" argument.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lorenzo Busetto. Author. Luigi Ranghetti. Author, maintainer. Leah Wasser. Reviewer.            Leah Wasser reviewed package rOpenSci, see                       https://github.com/ropensci/software-review/issues/184 Jeff Hanson. Reviewer.            Jeff Hanson reviewed package rOpenSci, see                       https://github.com/ropensci/software-review/issues/184 Babak Naimi. Contributor.            Babak Naimi wrote function ModisDownload(),                      MODIStsp internal functions based","code":""},{"path":"https://docs.ropensci.org/MODIStsp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"L. Busetto, L. Ranghetti (2016)  MODIStsp: R package automatic preprocessing MODIS Land Products time series,  Computers & Geosciences, Volume 97, Pages 40-48, ISSN 0098-3004, https://doi.org/10.1016/j.cageo.2016.08.020. URL https://github.com/ropensci/MODIStsp/.","code":"@Article{,   author = {Lorenzo Busetto and Luigi Ranghetti},   title = {MODIStsp: an R package for preprocessing of MODIS Land Products time series},   journal = {Computers & Geosciences},   year = {2016},   volume = {97},   pages = {40-48},   issn = {0098-3004},   doi = {10.1016/j.cageo.2016.08.020},   url = {https://github.com/ropensci/MODIStsp}, }"},{"path":"https://docs.ropensci.org/MODIStsp/index.html","id":"-modistsp-","dir":"","previous_headings":"","what":"Find, Download and Process MODIS Land Products\n    Data","title":"Find, Download and Process MODIS Land Products\n    Data","text":"MODIStsp R package devoted automatizing creation time series raster images derived MODIS Land Products data. MODIStsp allows performing several preprocessing steps (e.g., download, mosaicing, reprojection, resize, data extraction) MODIS data available within given time period. Users ability select specific layers original MODIS HDF files want process. also can select additional Quality Indicators extracted aggregated MODIS Quality Assurance layers , case Surface Reflectance products, Spectral Indexes computed original reflectance bands. processing parameters can easily selected powerful user-friendly GUI, although non-interactive execution exploiting previously created Options File possible. Stand-alone execution outside R environment also possible, allowing using scheduled execution MODIStsp automatically update time series related MODIS product extent whenever new image available. output layer, outputs saved single-band raster files corresponding available acquisition date. Virtual files, allowing accessing entire time series single file, can also created. MODIStsp developed Lorenzo Busetto Luigi Ranghetti, Institute Remote Sensing Environment - National Research Council - Italy (CNR-IREA). dedicated memory Lorenzo.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/index.html","id":"-whats-new","dir":"","previous_headings":"","what":"What’s New","title":"Find, Download and Process MODIS Land Products\n    Data","text":"29/10/2021 - MODIStsp (GitHub version 2.0.6.9000) supports products version 061. Version 006 remain default product version decommission announced. Version 061 can specified argument prod_version function MODIStsp() selecting GUI. 10/12/2020 - MODIStsp resubmitted CRAN maintainer’s death. Now MODIStsp dedicated Lorenzo Busetto (https://docs.ropensci.org/MODIStsp/articles/lorenzo). 01/09/2020 - MODIStsp 2.0.0 . Replaces old gWidgets GUI new one based Shiny, enhances support CLI usage enhances support/provides bug fixing datasets multiple NoData values applying scale/offset. 09/05/2020 - MODIStsp 1.4.0 . Switches use GDAL3/PROJ6 WKTs projection representation usage sf internal work vector data. Adds support products MCD19A1 MCD19A2 products. 07/06/2019 - MODIStsp 1.3.9 . Fixes bug causing crashes MOD14A1 product, adds support product MCD12Q2 removes support longer available version 5 products. 05/03/2019 - MODIStsp 1.3.8 . Fixes issue causing incorrect application scale/offset values GDAL versions > 2.3 (https://github.com/ropensci/MODIStsp/issues/163) adds support products MOD21A1D.006 MOD21A1N.006 MOD21A2.006. 29/11/2018 - recently discovered nasty bug computation custom spectral indices (including additions / subtractions reflectance values,  ( reflectance). See details. bug now fixed GitHub version. patched release made available CRAN soon possible. 07/08/2018 - glad report MODIStsp now included rOpenSci packages ecosystem. thank reviewers Leah Wasser Jeffrey Hanson valuable reviews, helped us improving package. 10/07/2018 - MODIStsp v. 1.3.6 (check Release Notes details). 20/06/2018 - MODIStsp v. 1.3.5 (check Release Notes details). 11/04/2018 - Due new NASA Policies MODIS FTP servers shut starting, April 2, 2018. FTP download therefore longer working removed next MODIStsp version. 11/04/2018 - Decommissioning MODIS Version 5 Land Data Products. per NASA notice , MODIS v005 products going decommissioned, soon longer available download. Support products removed next MODIStsp version. 11/08/2017 - MODIStsp 1.3.3 released today. provides improvements processing speed, well usual bug fixes. See <class=“fa fa-newspaper-o aria-hidden=”true”> news page detailed changelog.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/index.html","id":"-getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Find, Download and Process MODIS Land Products\n    Data","text":"install MODIStsp, please follow instructions reported ,  ,  . MODIStsp can used either interactive mode exploiting user-friendly GUI, non-interactive mode within R scripts. list currently supported MODIS products versions can found . Scheduled Processing allows automatic updating MODIS time series scheduled jobs,  . Solutions common installation, data download processing problems can found  faq. Please report issues may encounter issues page github .","code":""},{"path":"https://docs.ropensci.org/MODIStsp/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Find, Download and Process MODIS Land Products\n    Data","text":"cite MODIStsp publications, please use: L. Busetto, L. Ranghetti (2016) MODIStsp: R package automatic preprocessing MODIS Land Products time series, Computers & Geosciences, Volume 97, Pages 40-48, ISSN 0098-3004, https://doi.org/10.1016/j.cageo.2016.08.020, URL: https://github.com/ropensci/MODIStsp. BibTeX entry LaTeX users :","code":"@Article{,     author  = {Lorenzo Busetto and Luigi Ranghetti},     title   = {MODIStsp: an R package for preprocessing of MODIS Land Products time series},     journal = {Computers & Geosciences},     year    = {2016},     volume  = {97},     pages   = {40-48},     issn    = {0098-3004},     doi     = {10.1016/j.cageo.2016.08.020},     url     = {https://github.com/ropensci/MODIStsp},   }"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp-package.html","id":null,"dir":"Reference","previous_headings":"","what":"MODIStsp: a package to automatize the creation of time series of raster\nimages derived from MODIS Land Products — MODIStsp-package","title":"MODIStsp: a package to automatize the creation of time series of raster\nimages derived from MODIS Land Products — MODIStsp-package","text":"MODIStsp allows automating creation time series rasters derived MODIS Satellite Land Products data. performs several typical preprocessing steps download, mosaicking, reprojection resize data acquired specified time period. processing parameters can set using user-friendly GUI. Users can select layers original MODIS HDF files want process, additional Quality Indicators extracted aggregated MODIS Quality Assurance layers , case Surface Reflectance products , Spectral Indexes computed original reflectance bands. output layer, outputs saved single-band raster files corresponding available acquisition date. Virtual files allowing access entire time series single file also created. Command-line execution exploiting previously saved processing options file also possible, allowing automatically update time series related MODIS product whenever new image available.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MODIStsp: a package to automatize the creation of time series of raster\nimages derived from MODIS Land Products — MODIStsp-package","text":"Lorenzo Busetto, phD (2014-2017) Luigi Ranghetti, phD (2015-2017)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp.html","id":null,"dir":"Reference","previous_headings":"","what":"MODIStsp main function — MODIStsp","title":"MODIStsp main function — MODIStsp","text":"Main function MODIS Time Series Processing Tool (MODIStsp)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MODIStsp main function — MODIStsp","text":"","code":"MODIStsp(   ...,   gui = TRUE,   out_folder = NULL,   out_folder_mod = NULL,   opts_file = NULL,   selprod = NULL,   prod_version = NULL,   bandsel = NULL,   quality_bandsel = NULL,   indexes_bandsel = NULL,   sensor = NULL,   download_server = NULL,   downloader = NULL,   user = NULL,   password = NULL,   download_range = NULL,   start_date = NULL,   end_date = NULL,   spatmeth = NULL,   start_x = NULL,   end_x = NULL,   start_y = NULL,   end_y = NULL,   bbox = NULL,   spafile = NULL,   out_projsel = NULL,   output_proj = NULL,   out_res_sel = NULL,   out_res = NULL,   resampling = NULL,   reprocess = NULL,   delete_hdf = NULL,   nodata_change = NULL,   scale_val = NULL,   ts_format = NULL,   out_format = NULL,   compress = NULL,   test = NULL,   n_retries = 5,   verbose = TRUE,   parallel = TRUE )"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MODIStsp main function — MODIStsp","text":"... used values, forces later arguments bind name gui logical TRUE: GUI opened processing. FALSE: processing parameters retrieved provided opts_file argument), Default: TRUE out_folder character Main output folder, default: NULL. out_folder_mod character Output folder original HDF storage. \"$tempdir\" (default), temporary directory used. opts_file character full path JSON file containing MODIStsp processing options saved GUI, Default: NULL selprod character Name selected MODIS product (e.g., Vegetation Indexes_16Days_250m (M*D13Q1)). can get list available product names using function MODIStsp_get_prodnames, Default: NULL prod_version Version selected MODIS product. Currently versions \"061\" /\"006\" can chosen. Default value \"061\" (version \"006\" decommissioned USGS July 31, 2023, products version gradually removed). case users encounter error encoding bands quality flags encouraged report opening new issue GitHub https://github.com/ropensci/MODIStsp/issues. bandsel character array Original MODIS layers processed. can get list available layers given product using function MODIStsp_get_prodlayers (e.g., MODIStsp_get_prodlayers(\"M*D13Q1\")$bandnames), Default: NULL quality_bandsel character array Quality Indicators computed starting bit fields original MODIS layers. can get list available quality layers given product using function MODIStsp_get_prodlayers (e.g., MODIStsp_get_prodlayers(\"M*D13Q1\")$quality_bandnames), Default: NULL indexes_bandsel character arraySpectral Indexes computed starting reflectance bands. can get list available quality layers given product using function MODIStsp_get_prodlayers (e.g., MODIStsp_get_prodlayers(\"M*D13Q1\")$indexes_bandnames), Default: NULL sensor character [\"Terra\"| \"Aqua\" | \"\"] MODIS platform considered. (Ignored MCD* products). Default: \"\" download_server character [\"http\" | \"offline\"] service used download. Default: \"http\" downloader download_server character [\"http\" | \"aria2\"] downloader used, Default: \"http\" user character Username NASA http server. (urs.earthdata.nasa.gov/home). password character Password NASA http server (urs.earthdata.nasa.gov/home). download_range character [\"Full\" | \"Seasonal\"] \"full\", available images starting ending dates downloaded; \"seasonal\", images included season downloaded (e.g: starting date 2005-12-01 ending 2010-02-31, images December, January February 2005 2010 - excluding 2005-01, 2005-02 2010-12 - downloaded), Default: Full start_date character Start date images download preprocessing (yyyy.mm.dd), Default: NULL end_date character End date images download preprocessing (yyyy.mm.dd), Default: NULL spatmeth character [\"tiles\" | \"bbox\" | \"file\"], indicates processing extent retrieves. \"tiles\", use specified tiles (start_x....). \"file\", retrieve extent spatial file specifies spafile. \"bbox\", use specified bounding box, Default: \"tiles\" start_x integer [0-35] Start MODIS horizontal tile defining spatial extent. Ignored spatmeth != \"tiles\", Default: 18 end_x integer [0-35] End MODIS horizontal tile defining spatial extent. Ignored spatmeth != \"tiles\", Default: 18 start_y integer [0-17] Start MODIS vertical tile defining spatial extent. Ignored spatmeth != \"tiles\", Default: 4 end_y integer [0-17] End MODIS vertical tile defining spatial extent. Ignored spatmeth != \"tiles\", Default: 4 bbox numeric(4) Output bounding box (xmin, ymin, xmax, ymax) out_proj coordinate system. Ignored spatmeth == \"tiles\", Default: NULL spafile character (optional) full path spatial file use derive processing extent. NULL, processing options define extent, selected tiles \"Full Tile / Custom\" JSON options file overwritten new files created extent provided spatial file. Ignored spatmeth != \"file\", Default: NULL out_projsel character [\"Native\", \"User Defined] \"Native\", outputs keep original resolution MODIS HDF images. Otherwise, value set \"out_res\" used, Default:Native output_proj character either equal \"MODIS Sinusoidal\", code valid EPSG WKT projection string. Ignored outproj_sel == \"Native\", Default: NULL out_res_sel character [\"Native\", \"User Defined]. \"Native\", outputs keep original resolution MODIS HDF images. Otherwise, value set \"out_res\" used. out_res float Output resolution (output projection measurement unit). Ignored out_res_sel == \"Native\". resampling character [\"near\" | \"bilinear\" | \"cubic\" | \"cubicspline\", |lanczos\"|, \"average\"|, \"mode\", |\"max\"|, |\"min\"|, |\"q1\"|, |\"q3\"|, |\"sum\"|] Resampling method used gdalwarp. reprocess logical TRUE, reprocess data already existing dates. delete_hdf logical TRUE, delete downloaded HDF files completion. nodata_change logical TRUE, NoData values set max value datatype layer MODIStsp output rasters. NOTE: multiple nodata values reported layer, reset new value. scale_val logical TRUE,  scale offset applied original MODIS layers, Spectral Indexes saved floating point. FALSE, rescaling done Spectral Indexes saved integer, 10000 scaling factor. ts_format character array including [\"R RasterStack\" | \"ENVI Meta Files\" | \"GDAL VRT\" | \"ENVI GDAL\"] Selected virtual time series format. out_format character [\"ENVI\" | \"GTiff\"] Desired output format. compress character [\"None\" | \"PACKBITS\" | \"LZW\" | \"DEFLATE\"] Compression method GTiff outputs (Ignored out_format == ENVI) test integer | character  (e.g., \"01a\") set, MODIStsp executed \"test mode\", using preset Options File instead opening GUI accepting opts_file parameter. allows check correct installation user's machines, implement unit testing. n_retries numeric maximum number retries download functions. case download function fails n_retries times consecutively, MODIStsp_process abort, Default: 20 verbose logical FALSE, suppress processing messages, Default: TRUE parallel logical TRUE (default), function run using parallel processing, speed-computation large rasters (maximum 8 cores). number cores automatically determined; specifying also possible (e.g. parallel = 4). case, 8 cores can specified. FALSE (default), single core processing used.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MODIStsp main function — MODIStsp","text":"function used : initialize processing (folder names, packages, etc.); launch GUI (MODIStsp_GUI()) interactive execution, load options file set processing arguments /retrieve CLI inputs run processing non-interactive execution; launch routines downloading processing requested datasets. (MODIStsp_process()) launching function GUI = FALSE without specifying opts_file initializes arguments default values. allows making test run.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"MODIStsp main function — MODIStsp","text":"License: GPL 3.0","code":""},{"path":[]},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MODIStsp main function — MODIStsp","text":"Lorenzo Busetto, phD (2014-2017) Luigi Ranghetti, phD (2015-2017)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MODIStsp main function — MODIStsp","text":"","code":"# \\donttest{  #' # - Running the tool using the GUI # Running the tool without any option will start the GUI with the default or # last used settings, in interactive mode (i.e., with gui = TRUE). if (interactive()) {   MODIStsp() }   #' # - Running the tool specifying processing arguments in the call  # **NOTE** Output files of examples are saved to file.path(tempdir(), \"MODIStsp\").  # Here we process layers __NDVI__ and __EVI__ and quality indicator __usefulness__ # of product __M*D13Q1__, considering both Terra and Aqua platforms, for dates # comprised between 2020-06-01 and 2020-06-15 and saves output to R tempdir # --> See name and available layers for product M*D13Q1. # Note that this example (as well as the following ones) is run in single # core to follow CRAN policies, by setting parallel = FALSE. # Users can exploit multicore functionalities skipping to set this argument.  # The following check is performed in order not to provide errors # running the examples if HDF4 is not supported. is_hdf4_supported <- \"HDF4\" %in% sf::st_drivers(\"raster\")$name  MODIStsp_get_prodlayers(\"M*D13A2\") #> $prodname #> [1] \"Vegetation_Indexes_16Days_1Km (M*D13A2)\" #>  #> $bandnames #>  [1] \"NDVI\"     \"EVI\"      \"VI_QA\"    \"b1_Red\"   \"b2_NIR\"   \"b3_Blue\"  #>  [7] \"b7_SWIR\"  \"View_Zen\" \"Sun_Zen\"  \"Rel_Az\"   \"DOY\"      \"Rely\"     #>  #> $bandfullnames #>  [1] \"16 day NDVI average\"                \"16 day EVI average\"                 #>  [3] \"VI quality indicators\"              \"Surface Reflectance Band 1\"         #>  [5] \"Surface Reflectance Band 2\"         \"Surface Reflectance Band 3\"         #>  [7] \"Surface Reflectance Band 7\"         \"View zenith angle of VI pixel\"      #>  [9] \"Sun zenith angle of VI pixel\"       \"Relative azimuth angle of VI pixel\" #> [11] \"Day of year of VI pixel\"            \"Quality reliability of VI pixel\"    #>  #> $quality_bandnames #> [1] \"QA_qual\"     \"QA_usef\"     \"QA_aer\"      \"QA_adj_cld\"  \"QA_BRDF\"     #> [6] \"QA_mix_cld\"  \"QA_land_wat\" \"QA_snow_ice\" \"QA_shd\"      #>  #> $quality_fullnames #> [1] \"VI Quality\"                           #> [2] \"VI usefulness\"                        #> [3] \"Aerosol quantity\"                     #> [4] \"Adjacent cloud detected\"              #> [5] \"Atmosphere BRDF correction performed\" #> [6] \"Mixed Clouds\"                         #> [7] \"Land/Water Flag\"                      #> [8] \"Possible snow/ice\"                    #> [9] \"Possible shadow\"                      #>  #> $indexes_bandnames #> [1] \"SR\"    \"NDFI\"  \"NDII7\" \"SAVI\"  #>  #> $indexes_fullnames #> [1] \"Simple Ratio (NIR/Red)\"               #> [2] \"Flood Index (Red-SWIR2)/(Red+SWIR2)\"  #> [3] \"NDII7 (NIR-SWIR2)/(NIR+SWIR2)\"        #> [4] \"SAVI (NIR-Red)/(NIR+Red+0.5)*(1+0.5)\" #>  if (is_hdf4_supported) {   MODIStsp(     gui = FALSE,     out_folder = \"$tempdir\",     selprod = \"Vegetation_Indexes_16Days_1Km (M*D13A2)\",     bandsel = c(\"EVI\", \"NDVI\"),     quality_bandsel = \"QA_usef\",     indexes_bandsel = \"SR\",     user = \"mstp_test\" ,     password = \"MSTP_test_01\",     start_date = \"2020.06.01\",     end_date = \"2020.06.15\",     verbose = FALSE,     parallel = FALSE   ) }   #' # - Running the tool using the settings previously saved in a specific options file  # **NOTE** Output files of examples are saved to file.path(tempdir(), \"MODIStsp\"). # You can run the examples with `gui = TRUE` to set a different output folder!  # Here we use a test json file saved in MODIStsp installation folder which # downloads and processed 3 MOD13A2 images over the Como Lake (Lombardy, Italy) # and retrieves NDVI and EVI data, plus the Usefulness Index Quality Indicator.  opts_file <- system.file(\"testdata/test_MOD13A2.json\", package = \"MODIStsp\")  if (is_hdf4_supported) {   MODIStsp(gui = FALSE, opts_file = opts_file, verbose = TRUE, parallel = FALSE) } #> GDAL version in use: 3.4.1 #> [Sat Feb 10 06:25:47 2024] MODIStsp --> Starting processing #> [Sat Feb 10 06:25:47 2024] Accessing http server at:  https://e4ftl01.cr.usgs.gov/MOLT/MOD13A2.061/ #> [Sat Feb 10 06:25:48 2024] Retrieving list of available ` Terra ` Files for Year 2016 #> [Sat Feb 10 06:25:49 2024] Downloading Terra Files for date: 2016_06_09 : 1 of:  1 #> [Sat Feb 10 06:25:50 2024] [Sat Feb 10 06:25:50 2024] 1 files for date: 2016.06.09 were successfully downloaded! #> [Sat Feb 10 06:25:50 2024] Processing Terra NDVI files for date: 2016_06_09 #> [Sat Feb 10 06:25:50 2024] Processing Terra EVI files for date: 2016_06_09 #> [Sat Feb 10 06:25:50 2024] Processing Terra VI_QA files for date: 2016_06_09 #> [Sat Feb 10 06:25:50 2024] Computing QA_usef for date: 2016_06_09 #> [Sat Feb 10 06:25:52 2024] Downloading Terra Files for date: 2016_06_25 : 1 of:  1 #> [Sat Feb 10 06:25:52 2024] [Sat Feb 10 06:25:52 2024] 1 files for date: 2016.06.25 were successfully downloaded! #> [Sat Feb 10 06:25:52 2024] Processing Terra NDVI files for date: 2016_06_25 #> [Sat Feb 10 06:25:53 2024] Processing Terra EVI files for date: 2016_06_25 #> [Sat Feb 10 06:25:53 2024] Processing Terra VI_QA files for date: 2016_06_25 #> [Sat Feb 10 06:25:53 2024] Computing QA_usef for date: 2016_06_25 #> [Sat Feb 10 06:25:53 2024] Creating Virtual Files and R time series for layer NDVI #> [Sat Feb 10 06:25:53 2024] Creating Virtual Files and R time series for layer EVI #> [Sat Feb 10 06:25:53 2024] Creating Virtual Files and R time series for layer QA_usef #> [Sat Feb 10 06:25:53 2024] Total Processing Time: 6.12111711502075 #> [Sat Feb 10 06:25:53 2024] MODIStsp processed files are in: `/tmp/RtmprleXzN/MODIStsp` #> [Sat Feb 10 06:25:53 2024] Original downloaded MODIS HDF files are in: `/tmp/RtmprleXzN/MODIStsp/HDFs` #> [Sat Feb 10 06:25:53 2024] Processing options saved to: `/tmp/RtmprleXzN/MODIStsp/MODIStsp_2024-02-10.json`   # Running the tool using the settings previously saved in a specific option file # and specifying the extent from a spatial file allows to re-use the same # processing settings to perform download and reprocessing on a different area  opts_file <- system.file(\"testdata/test_MOD13A2.json\", package = \"MODIStsp\") spatial_file <- system.file(\"testdata/lakeshapes/garda_lake.shp\", package = \"MODIStsp\") if (is_hdf4_supported) {   MODIStsp(     gui = FALSE,     opts_file = opts_file,     spatmeth = \"file\",     spafile = spatial_file,     verbose = TRUE,     parallel = FALSE   ) } #> GDAL version in use: 3.4.1 #> [Sat Feb 10 06:25:53 2024] MODIStsp --> Starting processing #> [Sat Feb 10 06:25:53 2024] Accessing http server at:  https://e4ftl01.cr.usgs.gov/MOLT/MOD13A2.061/ #> [Sat Feb 10 06:25:54 2024] Retrieving list of available ` Terra ` Files for Year 2016 #> [Sat Feb 10 06:25:54 2024] HDF File: MOD13A2.A2016161.h18v04.061.2021353012725.hdf already exists on your system. Skipping download! #> [Sat Feb 10 06:25:54 2024] [Sat Feb 10 06:25:54 2024] 1 files for date: 2016.06.09 were successfully downloaded! #> [Sat Feb 10 06:25:55 2024] Processing Terra NDVI files for date: 2016_06_09 #> [Sat Feb 10 06:25:55 2024] Processing Terra EVI files for date: 2016_06_09 #> [Sat Feb 10 06:25:55 2024] Processing Terra VI_QA files for date: 2016_06_09 #> [Sat Feb 10 06:25:55 2024] Computing QA_usef for date: 2016_06_09 #> [Sat Feb 10 06:25:56 2024] HDF File: MOD13A2.A2016177.h18v04.061.2021353092234.hdf already exists on your system. Skipping download! #> [Sat Feb 10 06:25:56 2024] [Sat Feb 10 06:25:56 2024] 1 files for date: 2016.06.25 were successfully downloaded! #> [Sat Feb 10 06:25:56 2024] Processing Terra NDVI files for date: 2016_06_25 #> [Sat Feb 10 06:25:56 2024] Processing Terra EVI files for date: 2016_06_25 #> [Sat Feb 10 06:25:56 2024] Processing Terra VI_QA files for date: 2016_06_25 #> [Sat Feb 10 06:25:57 2024] Computing QA_usef for date: 2016_06_25 #> [Sat Feb 10 06:25:57 2024] Creating Virtual Files and R time series for layer NDVI #> [Sat Feb 10 06:25:57 2024] Creating Virtual Files and R time series for layer EVI #> [Sat Feb 10 06:25:57 2024] Creating Virtual Files and R time series for layer QA_usef #> [Sat Feb 10 06:25:57 2024] Total Processing Time: 3.63410425186157 #> [Sat Feb 10 06:25:57 2024] MODIStsp processed files are in: `/tmp/RtmprleXzN/MODIStsp/garda_lake` #> [Sat Feb 10 06:25:57 2024] Original downloaded MODIS HDF files are in: `/tmp/RtmprleXzN/MODIStsp/HDFs` #> [Sat Feb 10 06:25:57 2024] Processing options saved to: `/tmp/RtmprleXzN/MODIStsp/garda_lake/MODIStsp_2024-02-10.json`   # Running the tool using the settings previously saved in a # specific options file and specifying each time the extent from a different # spatial file (e.g., to perform the same processing on several extents) # Note that you can also put all your extent files in a specific folder and # create the extent list using for example.  extent_list = list.files(   system.file(\"testdata/lakeshapes/\", package = \"MODIStsp\"),   \"\\\\.shp$\",   full.names = TRUE ) extent_list #> [1] \"/usr/local/lib/R/site-library/MODIStsp/testdata/lakeshapes//garda_lake.shp\" #> [2] \"/usr/local/lib/R/site-library/MODIStsp/testdata/lakeshapes//iseo_lake.shp\"  opts_file <- system.file(\"testdata/test_MOD13A2.json\", package = \"MODIStsp\")  if (is_hdf4_supported) {   for (single_shape in extent_list) {     MODIStsp(       gui = FALSE,       opts_file = opts_file,       spatmeth = \"file\",       spafile = single_shape,       verbose = TRUE,       parallel = FALSE     )   } } #> GDAL version in use: 3.4.1 #> [Sat Feb 10 06:25:57 2024] MODIStsp --> Starting processing #> [Sat Feb 10 06:25:57 2024] Accessing http server at:  https://e4ftl01.cr.usgs.gov/MOLT/MOD13A2.061/ #> [Sat Feb 10 06:25:57 2024] Retrieving list of available ` Terra ` Files for Year 2016 #> [Sat Feb 10 06:25:57 2024] [Sat Feb 10 06:25:57 2024] All Required output files for date 2016_06_09 are already existing - Doing Nothing! #> Set Reprocess to TRUE to reprocess existing data! #> [Sat Feb 10 06:25:57 2024] [Sat Feb 10 06:25:57 2024] All Required output files for date 2016_06_25 are already existing - Doing Nothing! #> Set Reprocess to TRUE to reprocess existing data! #> [Sat Feb 10 06:25:57 2024] Creating Virtual Files and R time series for layer NDVI #> [Sat Feb 10 06:25:58 2024] Creating Virtual Files and R time series for layer EVI #> [Sat Feb 10 06:25:58 2024] Creating Virtual Files and R time series for layer QA_usef #> [Sat Feb 10 06:25:58 2024] Total Processing Time: 0.557390213012695 #> [Sat Feb 10 06:25:58 2024] MODIStsp processed files are in: `/tmp/RtmprleXzN/MODIStsp/garda_lake` #> [Sat Feb 10 06:25:58 2024] Original downloaded MODIS HDF files are in: `/tmp/RtmprleXzN/MODIStsp/HDFs` #> [Sat Feb 10 06:25:58 2024] Processing options saved to: `/tmp/RtmprleXzN/MODIStsp/garda_lake/MODIStsp_2024-02-10.json` #> GDAL version in use: 3.4.1 #> [Sat Feb 10 06:25:58 2024] MODIStsp --> Starting processing #> [Sat Feb 10 06:25:58 2024] Accessing http server at:  https://e4ftl01.cr.usgs.gov/MOLT/MOD13A2.061/ #> [Sat Feb 10 06:25:58 2024] Retrieving list of available ` Terra ` Files for Year 2016 #> [Sat Feb 10 06:25:59 2024] HDF File: MOD13A2.A2016161.h18v04.061.2021353012725.hdf already exists on your system. Skipping download! #> [Sat Feb 10 06:25:59 2024] [Sat Feb 10 06:25:59 2024] 1 files for date: 2016.06.09 were successfully downloaded! #> [Sat Feb 10 06:25:59 2024] Processing Terra NDVI files for date: 2016_06_09 #> [Sat Feb 10 06:25:59 2024] Processing Terra EVI files for date: 2016_06_09 #> [Sat Feb 10 06:25:59 2024] Processing Terra VI_QA files for date: 2016_06_09 #> [Sat Feb 10 06:25:59 2024] Computing QA_usef for date: 2016_06_09 #> [Sat Feb 10 06:26:00 2024] HDF File: MOD13A2.A2016177.h18v04.061.2021353092234.hdf already exists on your system. Skipping download! #> [Sat Feb 10 06:26:00 2024] [Sat Feb 10 06:26:00 2024] 1 files for date: 2016.06.25 were successfully downloaded! #> [Sat Feb 10 06:26:00 2024] Processing Terra NDVI files for date: 2016_06_25 #> [Sat Feb 10 06:26:00 2024] Processing Terra EVI files for date: 2016_06_25 #> [Sat Feb 10 06:26:00 2024] Processing Terra VI_QA files for date: 2016_06_25 #> [Sat Feb 10 06:26:01 2024] Computing QA_usef for date: 2016_06_25 #> [Sat Feb 10 06:26:01 2024] Creating Virtual Files and R time series for layer NDVI #> [Sat Feb 10 06:26:01 2024] Creating Virtual Files and R time series for layer EVI #> [Sat Feb 10 06:26:01 2024] Creating Virtual Files and R time series for layer QA_usef #> [Sat Feb 10 06:26:01 2024] Total Processing Time: 3.0306179523468 #> [Sat Feb 10 06:26:01 2024] MODIStsp processed files are in: `/tmp/RtmprleXzN/MODIStsp/iseo_lake` #> [Sat Feb 10 06:26:01 2024] Original downloaded MODIS HDF files are in: `/tmp/RtmprleXzN/MODIStsp/HDFs` #> [Sat Feb 10 06:26:01 2024] Processing options saved to: `/tmp/RtmprleXzN/MODIStsp/iseo_lake/MODIStsp_2024-02-10.json`  # output files are placed in separate folders: outfiles_garda <- list.files(   file.path(tempdir(), \"MODIStsp/garda_lake/VI_16Days_1Km_v61/NDVI\"),   full.names = TRUE ) outfiles_garda #> [1] \"/tmp/RtmprleXzN/MODIStsp/garda_lake/VI_16Days_1Km_v61/NDVI/MOD13A2_NDVI_2016_161.tif\" #> [2] \"/tmp/RtmprleXzN/MODIStsp/garda_lake/VI_16Days_1Km_v61/NDVI/MOD13A2_NDVI_2016_177.tif\" require(raster) #> Loading required package: raster #> Loading required package: sp if (length(outfiles_garda) > 0) {   plot(raster(outfiles_garda[1] )) }   outfiles_iseo <- list.files(   file.path(tempdir(), \"MODIStsp/iseo_lake/VI_16Days_1Km_v61/NDVI\"),   full.names = TRUE ) outfiles_iseo #> [1] \"/tmp/RtmprleXzN/MODIStsp/iseo_lake/VI_16Days_1Km_v61/NDVI/MOD13A2_NDVI_2016_161.tif\" #> [2] \"/tmp/RtmprleXzN/MODIStsp/iseo_lake/VI_16Days_1Km_v61/NDVI/MOD13A2_NDVI_2016_177.tif\" if (length(outfiles_garda) > 0) {   plot(raster(outfiles_iseo[1])) }   # See also https://docs.ropensci.org/MODIStsp/articles/noninteractive_execution.html # }"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_GUI.html","id":null,"dir":"Reference","previous_headings":"","what":"Build and manage the MODIStsp GUI — MODIStsp_GUI","title":"Build and manage the MODIStsp GUI — MODIStsp_GUI","text":"Function used generate handle GUI used allow selection MODIStsp processing parameters.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_GUI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build and manage the MODIStsp GUI — MODIStsp_GUI","text":"","code":"MODIStsp_GUI()"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_GUI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build and manage the MODIStsp GUI — MODIStsp_GUI","text":"function called side effects - opening GUI allowing set, save, load options eventually launch processing.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_GUI.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Build and manage the MODIStsp GUI — MODIStsp_GUI","text":"License: GPL 3.0","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_GUI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Build and manage the MODIStsp GUI — MODIStsp_GUI","text":"Lorenzo Busetto, phD (2014-2017) Luigi Ranghetti, phD (2015)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_addindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Add custom spectral indexes — MODIStsp_addindex","title":"Add custom spectral indexes — MODIStsp_addindex","text":"Function used add user-defined Spectral Index default list computable spectral indexes. Execution without GUI (.e., add new index script) also possible (see examples).","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_addindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add custom spectral indexes — MODIStsp_addindex","text":"","code":"MODIStsp_addindex(   new_indexbandname = \"\",   new_indexfullname = \"\",   new_indexformula = \"\",   new_indexnodata_out = \"32767\" )"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_addindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add custom spectral indexes — MODIStsp_addindex","text":"new_indexbandname character short name (acronym) new spectral index (Ignored gui == TRUE), Default: NULL new_indexfullname character extended name (acronym) new spectral index (Ignored gui == TRUE), Default: NULL new_indexformula character string containing formula new spectral indexes (Ignored gui == TRUE). Variables allowed formula names bands: b1_Red, b2_NIR, b3_Blue, b4_Green, b5_SWIR, b6_SWIR b7_SWIR. Default: NULL new_indexnodata_out character nodata value use rasters containing new index","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_addindex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add custom spectral indexes — MODIStsp_addindex","text":"function called side effects. success, MODIStsp_indexes.json modified allow computation additional indexes.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_addindex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add custom spectral indexes — MODIStsp_addindex","text":"function asks user provide info related new desired Spectral Index, checks correctness provided information (e.g., correct bandnames, computable formula, etc...). index legit, modifies MODIStsp_addindex.json file allow computation additional index within MODIStsp products containing required reflectance bands. remove custom-added spectral indexes, run MODIStsp_resetindexes()","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_addindex.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add custom spectral indexes — MODIStsp_addindex","text":"License: GPL 3.0","code":""},{"path":[]},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_addindex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add custom spectral indexes — MODIStsp_addindex","text":"Lorenzo Busetto, phD (2014-2017) Luigi Ranghetti, phD (2015)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_addindex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add custom spectral indexes — MODIStsp_addindex","text":"","code":"# Run the GUI to interactively define a new index  if (FALSE) {  MODIStsp_addindex()}  # Define the new index in non-interactive execution  if (FALSE) { MODIStsp_addindex(new_indexbandname = \"SSI\",   new_indexfullname = \"Simple Useless Index\",   new_indexformula = \"b2_NIR+b1_Red\") }"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_download.html","id":null,"dir":"Reference","previous_headings":"","what":"MODIStsp download function — MODIStsp_download","title":"MODIStsp download function — MODIStsp_download","text":"Internal function dealing download MODIS hdfs http remote server given date.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MODIStsp download function — MODIStsp_download","text":"","code":"MODIStsp_download(   modislist,   out_folder_mod,   download_server,   http,   n_retries,   use_aria,   date_dir,   year,   DOY,   user,   password,   sens_sel,   date_name,   gui,   verbose )"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MODIStsp download function — MODIStsp_download","text":"modislist character array List MODIS images downloaded selected date (returned get_mod_filenames). Can single image, list images case different tiles needed! out_folder_mod character Folder hdfs stored download_server character [\"http\"] Server used. http character Address http server selected product. n_retries numeric Max number retry attempts download. download fails n_retries times consecutively, abort use_aria logical TRUE, download using aria2c date_dir character array Sub-folder different images can found (element list returned get_mod_dirs, used case http download generate download addresses). year character Acquisition year images downloaded DOY character array Acquisition doys images downloaded user character Username http download password character Password http download sens_sel character [\"terra\" | \"aqua\"] Selected sensor. date_name character Date acquisition images downloaded. gui logical Indicates interactive non-interactive execution (influences log messages sent). verbose logical FALSE, suppress processing messages, Default: TRUE","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MODIStsp download function — MODIStsp_download","text":"function called side effects","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_download.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MODIStsp download function — MODIStsp_download","text":"Lorenzo Busetto, phD (2014-2017) Luigi Ranghetti, phD (2015)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data from MODIStsp time series — MODIStsp_extract","title":"Extract data from MODIStsp time series — MODIStsp_extract","text":"function used extract time series data rts files created MODIStsp spatial locations provided form \"R\" spatial objects (SpatialPoints, SpatialPolygons, etc.)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data from MODIStsp time series — MODIStsp_extract","text":"","code":"MODIStsp_extract(   in_rts,   sf_object,   start_date = NULL,   end_date = NULL,   id_field = NULL,   FUN = \"mean\",   out_format = \"xts\",   small = TRUE,   small_method = \"centroids\",   na.rm = TRUE,   verbose = FALSE )"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data from MODIStsp time series — MODIStsp_extract","text":"in_rts RasterStack bject created MODIStsp (MUST contain acquisition dates \"Z\" attribute) sf_object \"sf\" object name GDAL-readable vector file specifying \"area\" data extracted. sf_object represents lines, output object contains one column line, containing values obtained applying function specified FUN argument pixels touched line, one line date. sf_object represents points, output object contains one column point, containing values cells corresponding point, one line date. sf_object represents polygons, output object contains one column polygon, containing values obtained applying function specified FUN argument pixels belonging polygon, one line date start_date object class Date, POSIXct POSIXlt character coercible Date class (format = \"yyyy-mm-dd\")Starting date period considered data extraction . provided, first date RasterStack used. end_date object class Date, POSIXct POSIXlt character coercible Date class (format = \"yyyy-mm-dd\"). Ending date period considered data extraction . provided, last date RasterStack used. id_field character name column input sp object shapefile used data extraction. Values contained column MUST unique. names columns output taken column. provided, invalid value provided, names columns output reflect number feature sf_object. FUN function summarize values (e.g. mean) polygon data frames. function take single numeric vector argument return single value (e.g. mean, min max), accept na.rm argument. Thus, standard R functions including na.rm argument must  wrapped example: fun=function(x,...)length(x). Defaults \"mean\" out_format character [\"xts\" | \"dframe\"] dframe, output data frame dates first column extracted data others, otherwise xts object, Default: \"xts\" small logical TRUE, input polygons, values returned also polygons covering least one raster cell. \"Included\" cells case depend values \"small_method\" parameter. small_method character [\"centroids\" | \"full\"] small == TRUE input polygons, controls cells \"extracted\" small polygons. set \"centroids\" (default), cells corresponding polygon centroid considered (faster, may problems strangely shaped polygons). set \"full\", cells intersected small polygon extracted used calculations, Default: \"centroids\" na.rm logical TRUE, sf_object polygon, na.rm = TRUE used applying FUN different pixels polygon, Default = TRUE. verbose logical TRUE, messages processing status sent console. Default = TRUE.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data from MODIStsp time series — MODIStsp_extract","text":"data.frame xts object. column data corresponds one point one polygon, row date.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_extract.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract data from MODIStsp time series — MODIStsp_extract","text":"function takes input RasterStack object containing time information \"z\" attribute (set raster::setZ), starting ending date standard \"R\" spatial object, returns time series spatial locations specified spatial object form \"R\" xts object plain data.frame \"date\" column first position. input spatial object \"point\" \"line\" one,  output object contains one column specified point, cell intersecting line, one line date. input spatial object \"polygon\" one, output object contains one column polygon, containing values obtained applying function specified FUN argument pixels belonging polygon, one line date.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_extract.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract data from MODIStsp time series — MODIStsp_extract","text":"License: GPL 3.0","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_extract.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract data from MODIStsp time series — MODIStsp_extract","text":"Lorenzo Busetto, phD (2015 - 2017) email: busetto.l@irea.cnr.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data from MODIStsp time series — MODIStsp_extract","text":"","code":"if (FALSE) { # Extract average and standard deviation values from a rts object created by # MODIStsp for each polygon of a shapefile, for each date in the period # between 2001-01-01 and 2014-12-31  # The example uses tif files in testdata/VI_16Days_500m_v61 to build # a MODIStsp rasterStack corresponding to the 2016 time series of the NDVI index # over the Como Lake (Italy). It then extracts data on polygons corresponding # to different land cover classes saved in testdata/extract_polys.shp  # First, prepare the test dataset. # __NOTE__ To avoid redownloading, here we copy some test data from MODIStsp # installation folder to tempdir and use it to create a test time series.  test_zip <-  system.file(\"testdata/VI_16Days_500m_v6/NDVI.zip\",                          package = \"MODIStsp\") dir.create(file.path(tempdir(), \"MODIStsp/VI_16Days_500m_v61\"),            showWarnings = FALSE, recursive = TRUE) utils::unzip(test_zip,              exdir = file.path(tempdir(), \"MODIStsp/VI_16Days_500m_v61\"))  opts_file <- system.file(\"testdata/test_extract.json\", package = \"MODIStsp\") MODIStsp(opts_file = opts_file, gui = FALSE, verbose = FALSE)  # Now load the MODIStsp stack: This is a MODIS NDVI time series ranging between # 2016-01-01 and 2016-12-18 # __NOTE__: MODIStsp rasterStack files are always saved in the \"Time_Series\\/RData\" # subfolder of your main output folder - see # \"https://docs.ropensci.org/MODIStsp/articles/output.html\")  # Specify the filename of the RData RasterStack of interest stack_file  <- file.path(tempdir(),  \"MODIStsp/VI_16Days_500m_v61/Time_Series/RData/Terra/NDVI\",   \"MOD13A1_NDVI_1_2016_353_2016_RData.RData\") basename(stack_file)  ts_data <- get(load(stack_file)) ts_data  # Now load a shapefile containing polygons from which we want to extract data  polygons <- sf::st_read(system.file(\"testdata/extract_polys.shp\",                            package = \"MODIStsp\"), quiet = TRUE) polygons  # Finally, extract the average values for each polygon and date and plot the # results  out_dataavg <- suppressMessages(MODIStsp_extract(ts_data, polygons, id_field = \"lc_type\",                              small = FALSE)) head(out_dataavg)  plot(out_dataavg, legend.loc = \"topleft\")  # use a different summarization function  out_datasd <- MODIStsp_extract(ts_data, polygons, id_field = \"lc_type\",                               FUN = \"sd\", small = FALSE) head(out_datasd)  # (See also https://docs.ropensci.org/MODIStsp/articles/Analyze.html for a # worked-out example) }"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_get_prodlayers.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the names of MODIS layers for a product — MODIStsp_get_prodlayers","title":"Retrieve the names of MODIS layers for a product — MODIStsp_get_prodlayers","text":"Function used retrieve names original MODIS layers, quality layers eventually available spectral indexes given MODIS product code. useful identify names layers processed launching MODIStsp CLI.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_get_prodlayers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the names of MODIS layers for a product — MODIStsp_get_prodlayers","text":"","code":"MODIStsp_get_prodlayers(prodname, prodver = \"061\")"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_get_prodlayers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the names of MODIS layers for a product — MODIStsp_get_prodlayers","text":"prodname character containing code desired MODIS product. NOTE: products available separately Terra Aqua (e.g., MOD13Q1/MYD13Q1), use code MD_code_ (e.g., MD13Q1) prodver character containing version desired MODIS product. Currently versions \"061\" (default) \"006\" can chosen.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_get_prodlayers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the names of MODIS layers for a product — MODIStsp_get_prodlayers","text":"list, containing slots: prodname, bandnames, quality_bandnames indexes_bandnames, band_fullnames, quality_fullnames, indexes_fullnames","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_get_prodlayers.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Retrieve the names of MODIS layers for a product — MODIStsp_get_prodlayers","text":"License: GPL 3.0","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_get_prodlayers.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve the names of MODIS layers for a product — MODIStsp_get_prodlayers","text":"Lorenzo Busetto, phD (2014-2020) Luigi Ranghetti, phD (2021)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_get_prodlayers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the names of MODIS layers for a product — MODIStsp_get_prodlayers","text":"","code":"# Get layers of product M*13Q1 based on code MODIStsp_get_prodlayers(\"M*13Q1\") #> $prodname #> [1] \"Vegetation Indexes_16Days_250m (M*D13Q1)\" #>  #> $bandnames #>  [1] \"NDVI\"     \"EVI\"      \"VI_QA\"    \"b1_Red\"   \"b2_NIR\"   \"b3_Blue\"  #>  [7] \"b7_SWIR\"  \"View_Zen\" \"Sun_Zen\"  \"Rel_Az\"   \"DOY\"      \"Rely\"     #>  #> $bandfullnames #>  [1] \"16 day NDVI average\"                \"16 day EVI average\"                 #>  [3] \"VI quality indicators\"              \"Surface Reflectance Band 1\"         #>  [5] \"Surface Reflectance Band 2\"         \"Surface Reflectance Band 3\"         #>  [7] \"Surface Reflectance Band 7\"         \"View zenith angle of VI pixel\"      #>  [9] \"Sun zenith angle of VI pixel\"       \"Relative azimuth angle of VI pixel\" #> [11] \"Day of year of VI pixel\"            \"Quality reliability of VI pixel\"    #>  #> $quality_bandnames #> [1] \"QA_qual\"     \"QA_usef\"     \"QA_aer\"      \"QA_adj_cld\"  \"QA_BRDF\"     #> [6] \"QA_mix_cld\"  \"QA_land_wat\" \"QA_snow_ice\" \"QA_shd\"      #>  #> $quality_fullnames #> [1] \"VI Quality\"                           #> [2] \"VI usefulness\"                        #> [3] \"Aerosol quantity\"                     #> [4] \"Adjacent cloud detected\"              #> [5] \"Atmosphere BRDF correction performed\" #> [6] \"Mixed Clouds\"                         #> [7] \"Land/Water Flag\"                      #> [8] \"Possible snow/ice\"                    #> [9] \"Possible shadow\"                      #>  #> $indexes_bandnames #> [1] \"SR\"    \"NDFI\"  \"NDII7\" \"SAVI\"  #>  #> $indexes_fullnames #> [1] \"Simple Ratio (NIR/Red)\"               #> [2] \"Flood Index (Red-SWIR2)/(Red+SWIR2)\"  #> [3] \"NDII7 (NIR-SWIR2)/(NIR+SWIR2)\"        #> [4] \"SAVI (NIR-Red)/(NIR+Red+0.5)*(1+0.5)\" #>   # Get layers of product M*13Q1 based on full name MODIStsp_get_prodlayers(\"Vegetation Indexes_16Days_250m (M*D13Q1)\") #> $prodname #> [1] \"Vegetation Indexes_16Days_250m (M*D13Q1)\" #>  #> $bandnames #>  [1] \"NDVI\"     \"EVI\"      \"VI_QA\"    \"b1_Red\"   \"b2_NIR\"   \"b3_Blue\"  #>  [7] \"b7_SWIR\"  \"View_Zen\" \"Sun_Zen\"  \"Rel_Az\"   \"DOY\"      \"Rely\"     #>  #> $bandfullnames #>  [1] \"16 day NDVI average\"                \"16 day EVI average\"                 #>  [3] \"VI quality indicators\"              \"Surface Reflectance Band 1\"         #>  [5] \"Surface Reflectance Band 2\"         \"Surface Reflectance Band 3\"         #>  [7] \"Surface Reflectance Band 7\"         \"View zenith angle of VI pixel\"      #>  [9] \"Sun zenith angle of VI pixel\"       \"Relative azimuth angle of VI pixel\" #> [11] \"Day of year of VI pixel\"            \"Quality reliability of VI pixel\"    #>  #> $quality_bandnames #> [1] \"QA_qual\"     \"QA_usef\"     \"QA_aer\"      \"QA_adj_cld\"  \"QA_BRDF\"     #> [6] \"QA_mix_cld\"  \"QA_land_wat\" \"QA_snow_ice\" \"QA_shd\"      #>  #> $quality_fullnames #> [1] \"VI Quality\"                           #> [2] \"VI usefulness\"                        #> [3] \"Aerosol quantity\"                     #> [4] \"Adjacent cloud detected\"              #> [5] \"Atmosphere BRDF correction performed\" #> [6] \"Mixed Clouds\"                         #> [7] \"Land/Water Flag\"                      #> [8] \"Possible snow/ice\"                    #> [9] \"Possible shadow\"                      #>  #> $indexes_bandnames #> [1] \"SR\"    \"NDFI\"  \"NDII7\" \"SAVI\"  #>  #> $indexes_fullnames #> [1] \"Simple Ratio (NIR/Red)\"               #> [2] \"Flood Index (Red-SWIR2)/(Red+SWIR2)\"  #> [3] \"NDII7 (NIR-SWIR2)/(NIR+SWIR2)\"        #> [4] \"SAVI (NIR-Red)/(NIR+Red+0.5)*(1+0.5)\" #>   # Get indexes names of product M*13Q1 based on full name MODIStsp_get_prodlayers(\"MCD43C4\")$indexes_bandnames #>  [1] \"NDVI\"  \"EVI\"   \"SR\"    \"NDFI\"  \"NDII6\" \"NDII7\" \"SAVI\"  \"NDSI\"  \"GNDVI\" #> [10] \"RGRI\"  \"GRVI\""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_get_prodnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the names of all available product — MODIStsp_get_prodnames","title":"Retrieve the names of all available product — MODIStsp_get_prodnames","text":"Function used retrieve names available MODIS products","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_get_prodnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the names of all available product — MODIStsp_get_prodnames","text":"","code":"MODIStsp_get_prodnames()"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_get_prodnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the names of all available product — MODIStsp_get_prodnames","text":"character array product names","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_get_prodnames.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Retrieve the names of all available product — MODIStsp_get_prodnames","text":"License: GPL 3.0","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_get_prodnames.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve the names of all available product — MODIStsp_get_prodnames","text":"Lorenzo Busetto, phD (2014-2020)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_get_prodnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the names of all available product — MODIStsp_get_prodnames","text":"","code":"# Get MODIStsp product names MODIStsp_get_prodnames() #>   [1] \"Surf_Ref_8Days_500m (M*D09A1)\"                    #>   [2] \"Surf_Ref_Daily_005dg (M*D09CMG)\"                  #>   [3] \"Surf_Ref_Daily_500m (M*D09GA)\"                    #>   [4] \"Surf_Ref_Daily_250m (M*D09GQ)\"                    #>   [5] \"Surf_Ref_8Days_250m (M*D09Q1)\"                    #>   [6] \"Snow_Cov_Daily_500m (M*D10A1)\"                    #>   [7] \"Snow_Cov_8-Day_500m (M*D10_A2)\"                   #>   [8] \"Snow_Cov_Day_0.05Deg (M*D10C1)\"                   #>   [9] \"Snow_Cov_8-Day0.05Deg CMG (M*D10C2)\"              #>  [10] \"Snow_Cov_Month_0.05Deg CMG (M*D10CM)\"             #>  [11] \"Surf_Temp_Daily_005dg (M*D11C1)\"                  #>  [12] \"Surf_Temp_Daily_1Km (M*D11A1)\"                    #>  [13] \"Surf_Temp_8Days_1Km (M*D11A2)\"                    #>  [14] \"Surf_Temp_Daily_GridSin (M*D11B1)\"                #>  [15] \"Surf_Temp_8Days_GridSin (M*D11B2)\"                #>  [16] \"Surf_Temp_Monthly_GridSin (M*D11B3)\"              #>  [17] \"Surf_Temp_8Days_005dg (M*D11C2)\"                  #>  [18] \"Surf_Temp_Monthly_005dg (M*D11C3)\"                #>  [19] \"LST_3band_emissivity_Daily_1km (M*D21A1D)\"        #>  [20] \"LST_3band_emissivity_Daily_1km_night (M*D21A1N)\"  #>  [21] \"LST_3band_emissivity_8day_1km (M*D21A2)\"          #>  [22] \"BRDF_Albedo_ModelPar_Daily_500m (MCD43A1)\"        #>  [23] \"BRDF_Albedo_Quality_Daily_500m (MCD43A2)\"         #>  [24] \"Albedo_Daily_500m (MCD43A3)\"                      #>  [25] \"BRDF_Adj_Refl_Daily_500m (MCD43A4)\"               #>  [26] \"BRDF_Albedo_ModelPar_Daily_005dg (MCD43C1)\"       #>  [27] \"BRDF_Albedo_Quality_Daily_005dg (MCD43C2)\"        #>  [28] \"Albedo_Daily_005dg (MCD43C3)\"                     #>  [29] \"BRDF_Adj_Refl_16Day_005dg (MCD43C4)\"              #>  [30] \"AlbPar_1_B1_Daily_30ArcSec (MCD43D01)\"            #>  [31] \"AlbPar_2_B1_Daily_30ArcSec (MCD43D02)\"            #>  [32] \"AlbPar_3_B1_Daily_30ArcSec (MCD43D03)\"            #>  [33] \"AlbPar_1_B2_Daily_30ArcSec (MCD43D04)\"            #>  [34] \"AlbPar_2_B2_Daily_30ArcSec (MCD43D05)\"            #>  [35] \"AlbPar_3_B2_Daily_30ArcSec (MCD43D06)\"            #>  [36] \"AlbPar_1_B3_Daily_30ArcSec (MCD43D07)\"            #>  [37] \"AlbPar_2_B3_Daily_30ArcSec (MCD43D08)\"            #>  [38] \"AlbPar_3_B3_Daily_30ArcSec (MCD43D09)\"            #>  [39] \"AlbPar_1_B4_Daily_30ArcSec (MCD43D10)\"            #>  [40] \"AlbPar_2_B4_Daily_30ArcSec (MCD43D11)\"            #>  [41] \"AlbPar_3_B4_Daily_30ArcSec (MCD43D12)\"            #>  [42] \"AlbPar_1_B4_Daily_30ArcSec (MCD43D13)\"            #>  [43] \"AlbPar_2_B4_Daily_30ArcSec (MCD43D14)\"            #>  [44] \"AlbPar_3_B4_Daily_30ArcSec (MCD43D15)\"            #>  [45] \"AlbPar_1_B5_Daily_30ArcSec (MCD43D16)\"            #>  [46] \"AlbPar_2_B5_Daily_30ArcSec (MCD43D17)\"            #>  [47] \"AlbPar_3_B5_Daily_30ArcSec (MCD43D18)\"            #>  [48] \"AlbPar_1_B6_Daily_30ArcSec (MCD43D19)\"            #>  [49] \"AlbPar_2_B6_Daily_30ArcSec (MCD43D20)\"            #>  [50] \"AlbPar_3_B6_Daily_30ArcSec (MCD43D21)\"            #>  [51] \"AlbPar_1_Vis_Daily_30ArcSec (MCD43D22)\"           #>  [52] \"AlbPar_2_Vis_Daily_30ArcSec (MCD43D23)\"           #>  [53] \"AlbPar_3_Vis_Daily_30ArcSec (MCD43D24)\"           #>  [54] \"AlbPar_1_NIR_Daily_30ArcSec (MCD43D25)\"           #>  [55] \"AlbPar_2_NIR_Daily_30ArcSec (MCD43D26)\"           #>  [56] \"AlbPar_3_NIR_Daily_30ArcSec (MCD43D27)\"           #>  [57] \"AlbPar_1_SWIR_Daily_30ArcSec (MCD43D28)\"          #>  [58] \"AlbPar_2_SWIR_Daily_30ArcSec (MCD43D29)\"          #>  [59] \"AlbPar_3_SWIR_Daily_30ArcSec (MCD43D30)\"          #>  [60] \"BRDF_Albedo_Quality_Daily_30ArcSec (MCD43D31)\"    #>  [61] \"BRDF_Albedo_SolNoon_Daily_30ArcSec (MCD43D32)\"    #>  [62] \"Alb_ValObs_B1_Daily_30ArcSec (MCD43D33)\"          #>  [63] \"Alb_ValObs_B2_Daily_30ArcSec (MCD43D34)\"          #>  [64] \"Alb_ValObs_B3_Daily_30ArcSec (MCD43D35)\"          #>  [65] \"Alb_ValObs_B4_Daily_30ArcSec (MCD43D36)\"          #>  [66] \"Alb_ValObs_B5_Daily_30ArcSec (MCD43D37)\"          #>  [67] \"Alb_ValObs_B6_Daily_30ArcSec (MCD43D38)\"          #>  [68] \"Alb_ValObs_B7_Daily_30ArcSec (MCD43D39)\"          #>  [69] \"BRDF_Albedo_Snow_Daily_30ArcSec (MCD43D40)\"       #>  [70] \"BRDF_Alb_Unc_Daily_30ArcSec (MCD43D41)\"           #>  [71] \"BRDF_Alb_BSA_B1_Daily_30ArcSec (MCD43D42)\"        #>  [72] \"BRDF_Alb_BSA_B2_Daily_30ArcSec (MCD43D43)\"        #>  [73] \"BRDF_Alb_BSA_B3_Daily_30ArcSec (MCD43D44)\"        #>  [74] \"BRDF_Alb_BSA_B4_Daily_30ArcSec (MCD43D45)\"        #>  [75] \"BRDF_Alb_BSA_B5_Daily_30ArcSec (MCD43D46)\"        #>  [76] \"BRDF_Alb_BSA_B6_Daily_30ArcSec (MCD43D47)\"        #>  [77] \"BRDF_Alb_BSA_B7_Daily_30ArcSec (MCD43D48)\"        #>  [78] \"BRDF_Alb_BSA_Vis_Daily_30ArcSec (MCD43D49)\"       #>  [79] \"BRDF_Alb_BSA_NIR_Daily_30ArcSec (MCD43D50)\"       #>  [80] \"BRDF_Alb_BSA_SWIR_Daily_30ArcSec (MCD43D51)\"      #>  [81] \"BRDF_Alb_WSA_B1_Daily_30ArcSec (MCD43D52)\"        #>  [82] \"BRDF_Alb_WSA_B2_Daily_30ArcSec (MCD43D53)\"        #>  [83] \"BRDF_Alb_WSA_B3_Daily_30ArcSec (MCD43D54)\"        #>  [84] \"BRDF_Alb_WSA_B4_Daily_30ArcSec (MCD43D55)\"        #>  [85] \"BRDF_Alb_WSA_B5_Daily_30ArcSec (MCD43D56)\"        #>  [86] \"BRDF_Alb_WSA_B6_Daily_30ArcSec (MCD43D57)\"        #>  [87] \"BRDF_Alb_WSA_B7_Daily_30ArcSec (MCD43D58)\"        #>  [88] \"BRDF_Alb_WSA_Vis_Daily_30ArcSec (MCD43D59)\"       #>  [89] \"BRDF_Alb_WSA_NIR_Daily_30ArcSec (MCD43D60)\"       #>  [90] \"BRDF_Alb_WSA_SWIR_Daily_30ArcSec (MCD43D61)\"      #>  [91] \"BRDF_Albedo_NBAR_Band1_Daily_30ArcSec (MCD43D62)\" #>  [92] \"BRDF_Albedo_NBAR_Band2_Daily_30ArcSec (MCD43D63)\" #>  [93] \"BRDF_Albedo_NBAR_Band3_Daily_30ArcSec (MCD43D64)\" #>  [94] \"BRDF_Albedo_NBAR_Band4_Daily_30ArcSec (MCD43D65)\" #>  [95] \"BRDF_Albedo_NBAR_Band5_Daily_30ArcSec (MCD43D66)\" #>  [96] \"BRDF_Albedo_NBAR_Band6_Daily_30ArcSec (MCD43D67)\" #>  [97] \"BRDF_Albedo_NBAR_Band7_Daily_30ArcSec (MCD43D68)\" #>  [98] \"Vegetation_Indexes_16Days_500m (M*D13A1)\"         #>  [99] \"Vegetation_Indexes_16Days_1Km (M*D13A2)\"          #> [100] \"Vegetation_Indexes_Monthly_1Km (M*D13A3)\"         #> [101] \"Vegetation_Indexes_16Days_005dg (M*D13C1)\"        #> [102] \"Vegetation_Indexes_Monthly_005dg (M*D13C2)\"       #> [103] \"Vegetation Indexes_16Days_250m (M*D13Q1)\"         #> [104] \"LAI_8Days_500m (MCD15A2H)\"                        #> [105] \"LAI_4Days_500m (MCD15A3H)\"                        #> [106] \"LAI_8Days_500m (M*D15A2H)\"                        #> [107] \"Net_ET_8Day_500m (M*D16A2)\"                       #> [108] \"Net_ETgf_8Day_500m (M*D16A2GF)\"                   #> [109] \"Net_ETgf_Yearly_500m (M*D16A3GF)\"                 #> [110] \"Gross_PP_8Days_500m (M*D17A2H)\"                   #> [111] \"Gross_PP_GapFil_8Days_500m (M*D17A2HGF)\"          #> [112] \"Net_PP_GapFil_Yearly_500m (M*D17A3HGF)\"           #> [113] \"Veg_Cont_Fields_Yearly_250m (MOD44B)\"             #> [114] \"Land_Wat_Mask_Yearly_250m (MOD44W)\"               #> [115] \"Burned_Monthly_500m (MCD64A1)\"                    #> [116] \"ThermalAn_Fire_Daily_1Km (M*D14A1)\"               #> [117] \"ThermalAn_Fire_8Days_1Km (M*D14A2)\"               #> [118] \"LandCover_Type_Yearly_005dg (MCD12C1)\"            #> [119] \"LandCover_Type_Yearly_500m (MCD12Q1)\"             #> [120] \"LandCover_Dynamics_Yearly_500m (MCD12Q2)\"         #> [121] \"Dwnwrd_Srw_Rad_3h_005dg (MCD18A1)\"                #> [122] \"Dwnwrd_PAR_3h_005dg (MCD18A2)\"                    #> [123] \"MAIA_Land_Surf_BRF (MCD19A1)\"                     #> [124] \"MAIA_Land_AOT_daily (MCD19A2)\""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process.html","id":null,"dir":"Reference","previous_headings":"","what":"MODIStsp main processing function — MODIStsp_process","title":"MODIStsp main processing function — MODIStsp_process","text":"Main processing function MODIStsp. Takes input processing parameters specified user performs required processing.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MODIStsp main processing function — MODIStsp_process","text":"","code":"MODIStsp_process(proc_opts, n_retries, verbose = TRUE, parallel = TRUE)"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MODIStsp main processing function — MODIStsp_process","text":"proc_opts data.frame containing processing parameters, passed MODIStsp GUI, created MODIStsp joining explicitly passed arguments (mandatory) options file. n_retries numeric maximum number retries download functions. case download function fails n_retries times consecutively, MODIStsp_process abort, Default: 20 verbose logical FALSE, suppress processing messages, Default: TRUE parallel logical TRUE (default), function run using parallel processing, speed-computation large rasters (maximum 8 cores). number cores automatically determined; specifying also possible (e.g. parallel = 4). case, 8 cores can specified. FALSE (default), single core processing used.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MODIStsp main processing function — MODIStsp_process","text":"function called side effects.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MODIStsp main processing function — MODIStsp_process","text":"retrieving input processing options, function Accesses NASA http archive determine list files downloaded/processed (, case offline processing, get list already available hdf files present out_mod_folder); Performs required processing steps date (download, reprojection, resize, mosaicing, Spectral Indexes Quality indicators computation); Creates virtual files processed time series. Reprojection resize dealt accessing gdal routines gdalUtilities package. Extraction bitfields Quality layers done though bitwise computation Checks done order re-download already existing HDF images, reprocess already processed dates (user specify )","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"MODIStsp main processing function — MODIStsp_process","text":"Thanks Tomislav Hengl Babak Naimi, whose scripts made starting point development function (ModisDownload; Download_and_resampling_of_MODIS_images) License: GPL 3.0","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MODIStsp main processing function — MODIStsp_process","text":"Lorenzo Busetto, phD (2014-2017) Luigi Ranghetti, phD (2015)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_QA_bits.html","id":null,"dir":"Reference","previous_headings":"","what":"MODIStsp helper function to compute Quality Indicators from HDF bit-field layers — MODIStsp_process_QA_bits","title":"MODIStsp helper function to compute Quality Indicators from HDF bit-field layers — MODIStsp_process_QA_bits","text":"function used extract quality indicator MODIS aggregated quality layers","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_QA_bits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MODIStsp helper function to compute Quality Indicators from HDF bit-field layers — MODIStsp_process_QA_bits","text":"","code":"MODIStsp_process_QA_bits(   out_filename,   in_source_file,   bitN,   out_format,   nodata_source,   nodata_qa_in,   nodata_qa_out,   compress )"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_QA_bits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MODIStsp helper function to compute Quality Indicators from HDF bit-field layers — MODIStsp_process_QA_bits","text":"out_filename character file name output raster files containing QI values in_source_file character name file created MODIStsp containing data required compute quality indicator bitN character position bits corresponding quality indicator interest (e.g., 0-1 = first two bits; 2-5: bits 2 5, etc.) out_format output format (ENVI GTiff) nodata_source character NoData values MODIS band containing data bit field corresponding quality indicator must extracted nodata_qa_in character NoData quality bands (\"255\") nodata_qa_out character NoData quality bands (\"255\") compress character compression option GTiff files","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_QA_bits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MODIStsp helper function to compute Quality Indicators from HDF bit-field layers — MODIStsp_process_QA_bits","text":"basis name image containing aggregated quality information (in_source_file``) position bit fields corresponding QI interest bitfield representation (bitN``), function extracts correct information exploiting bitwise operators, save result new raster image","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_QA_bits.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"MODIStsp helper function to compute Quality Indicators from HDF bit-field layers — MODIStsp_process_QA_bits","text":"License: GPL 3.0 Based modis.qc.R script Yann Chemin (2008) (https://goo.gl/7Fhreo) license GPL 3.0","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_QA_bits.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MODIStsp helper function to compute Quality Indicators from HDF bit-field layers — MODIStsp_process_QA_bits","text":"Lorenzo Busetto, phD (2017) Luigi Ranghetti, phD (2017)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_bands.html","id":null,"dir":"Reference","previous_headings":"","what":"MODIStsp helper for processing original HDF layers — MODIStsp_process_bands","title":"MODIStsp helper for processing original HDF layers — MODIStsp_process_bands","text":"Internal function used perform required spatial processing MODIS original hdf layers (reprojection, resizing, resampling, mosaicing, computation scaling factors). function based use gdal routines.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_bands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MODIStsp helper for processing original HDF layers — MODIStsp_process_bands","text":"","code":"MODIStsp_process_bands(   out_folder_mod,   modislist,   outproj_str,   mod_proj_str,   sens_sel,   band,   bandname,   date_name,   datatype,   nodata_in,   nodata_out,   full_ext,   bbox,   scale_val,   scale_factor,   offset,   out_format,   outrep_file,   compress,   out_res_sel,   out_res,   resampling,   nodata_change,   gui,   verbose,   parallel )"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_bands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MODIStsp helper for processing original HDF layers — MODIStsp_process_bands","text":"out_folder_mod character Output folder original HDF storage. \"$tempdir\" (default), temporary directory used. modislist character array List MODIS images downloaded selected date (returned get_mod_filenames). Can single image, list images case different tiles needed! outproj_str character EPSG WKT output projection. mod_proj_str character EPSG WKT MODIS projection. sens_sel character [\"terra\" | \"aqua\"] Selected sensor. band numeric band number corresponding HDF layer processed bandname character Name HDF layer processed. date_name character Date acquisition images downloaded. datatype character Datatype HDF layer processed. nodata_in numeric Original nodata value HDF layer processed. nodata_out numeric Output nodata value HDF layer processed. full_ext logical TRUE, process full tiles, FALSE, process bbox bbox numeric(4) Output bounding box (xmin, ymin, xmax, ymax) out_proj coordinate system. Ignored spatmeth == \"tiles\", Default: NULL scale_val logical TRUE,  scale offset applied original MODIS layers, Spectral Indexes saved floating point. FALSE, rescaling done Spectral Indexes saved integer, 10000 scaling factor. scale_factor numeric Scale factor applied HDF layer processed (Ignored scale_val == FALSE). offset numeric Offset applied HDF layer processed (Ignored scale_val == FALSE). out_format character [\"ENVI\" | \"GTiff\"] Desired output format. outrep_file character Full path file results processing stored (created MODIStsp_process) compress character [\"None\" | \"PACKBITS\" | \"LZW\" | \"DEFLATE\"] Compression method GTiff outputs (Ignored out_format == ENVI) out_res_sel character [\"Native\", \"User Defined]. \"Native\", outputs keep original resolution MODIS HDF images. Otherwise, value set \"out_res\" used. out_res float Output resolution (output projection measurement unit). Ignored out_res_sel == \"Native\". resampling character [\"near\" | \"bilinear\" | \"cubic\" | \"cubicspline\", |lanczos\"|, \"average\"|, \"mode\", |\"max\"|, |\"min\"|, |\"q1\"|, |\"q3\"|, |\"sum\"|] Resampling method used gdalwarp. nodata_change logical TRUE, NoData values set max value datatype layer MODIStsp output rasters. NOTE: multiple nodata values reported layer, reset new value. gui logical TRUE: GUI opened processing. FALSE: processing parameters retrieved provided opts_file argument), Default: TRUE verbose logical FALSE, suppress processing messages, Default: TRUE parallel logical TRUE, function run using parallel processing, speed-computation large rasters (maximum 8 cores). number cores automatically determined; specifying also possible (e.g. parallel = 4). case, 8 cores can specified. FALSE (default), single core processing used.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_bands.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MODIStsp helper for processing original HDF layers — MODIStsp_process_bands","text":"function called side effects","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_bands.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MODIStsp helper for processing original HDF layers — MODIStsp_process_bands","text":"Lorenzo Busetto, phD (2014-2017) Luigi Ranghetti, phD (2015)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_indexes.html","id":null,"dir":"Reference","previous_headings":"","what":"MODIStsp helper for computing spectral indexes — MODIStsp_process_indexes","title":"MODIStsp helper for computing spectral indexes — MODIStsp_process_indexes","text":"function used compute spectral indexes, given index formula","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_indexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MODIStsp helper for computing spectral indexes — MODIStsp_process_indexes","text":"","code":"MODIStsp_process_indexes(   out_filename,   out_prod_folder,   formula,   bandnames,   nodata_out,   indexes_nodata_out,   file_prefix,   compress,   yy,   out_format,   DOY,   scale_val )"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_indexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MODIStsp helper for computing spectral indexes — MODIStsp_process_indexes","text":"out_filename character basename file save results out_prod_folder character output folder product used retrieve filenames rasters original bands used computations formula character Index formula, derived XML file stored prod_opts within previous_file bandnames character array names original HDF layer. Used identify bands required index computation nodata_out character array NoData values reflectance bands indexes_nodata_out character NoData value resulting raster file_prefix character used retrieve filenames rasters original bands used computations compress character compression option GTiff files yy character year string used retrieve filenames rasters original bands used computations out_format character string used retrieve filenames rasters original bands used computations DOY character doy string used retrieve filenames rasters original bands used computations scale_val character (Yes/) Yes, output values computed float -1 - 1, otherwise integer -10000 - 10000","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_indexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MODIStsp helper for computing spectral indexes — MODIStsp_process_indexes","text":"NULL - new raster file saved out_filename","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_indexes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MODIStsp helper for computing spectral indexes — MODIStsp_process_indexes","text":"function parses index formula identify required bands. basis identified bands, retrieves reflectance bands required, gets data R raster objects, performs computation stores results GeoTiff ENVI raster file","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_indexes.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"MODIStsp helper for computing spectral indexes — MODIStsp_process_indexes","text":"License: GPL 3.0","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_process_indexes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MODIStsp helper for computing spectral indexes — MODIStsp_process_indexes","text":"Lorenzo Busetto, phD (2017) Luigi Ranghetti, phD (2017)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_read_xml.html","id":null,"dir":"Reference","previous_headings":"","what":"Read MODIS products characteristics from XML — MODIStsp_read_xml","title":"Read MODIS products characteristics from XML — MODIStsp_read_xml","text":"function used parse XML file used store characteristics MODIS Land Products store \"prod_opts\" data frame","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_read_xml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read MODIS products characteristics from XML — MODIStsp_read_xml","text":"","code":"MODIStsp_read_xml(prodopts_file, xml_file)"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_read_xml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read MODIS products characteristics from XML — MODIStsp_read_xml","text":"prodopts_file string filename RData store data parsed XML file xml_file string filename XML file containing MODIS products characteristics","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_read_xml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read MODIS products characteristics from XML — MODIStsp_read_xml","text":"NULL - retrieved data stored specified RData file","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_read_xml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read MODIS products characteristics from XML — MODIStsp_read_xml","text":"function parses XML file product product, stores data data frame saves data frame within \"MODIStsp_previous\" RData file list lists","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_read_xml.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Read MODIS products characteristics from XML — MODIStsp_read_xml","text":"License: GPL 3.0","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_read_xml.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read MODIS products characteristics from XML — MODIStsp_read_xml","text":"Lorenzo Busetto, phD (2014-2017) Luigi Ranghetti, phD (2015)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_resetindexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove custom spectral indexes — MODIStsp_resetindexes","title":"Remove custom spectral indexes — MODIStsp_resetindexes","text":"Function used remove user-defined Spectral Indexes MODIStsp, thus resetting list available indexes default ones.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_resetindexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove custom spectral indexes — MODIStsp_resetindexes","text":"","code":"MODIStsp_resetindexes()"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_resetindexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove custom spectral indexes — MODIStsp_resetindexes","text":"function called side effects. success, MODIStsp_indexes.json file modified remove previously custom-specified Spectral Indexes.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_resetindexes.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Remove custom spectral indexes — MODIStsp_resetindexes","text":"License: GPL 3.0","code":""},{"path":[]},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_resetindexes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove custom spectral indexes — MODIStsp_resetindexes","text":"Lorenzo Busetto, phD (2014-2017) busetto.l@irea.cnr.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_resetindexes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove custom spectral indexes — MODIStsp_resetindexes","text":"","code":"if (FALSE) { # Remove all custom-defined spectral indexes from an options file  # Add a custom index for testing purposes library(jsonlite) opts_jsfile = system.file(\"testdata/test_addindex.json\",                              package = \"MODIStsp\")  MODIStsp_addindex(    opts_jsfile = opts_jsfile,    gui = FALSE,    new_indexbandname = paste0(\"Index_\", as.character(sample(10000, 1))),    new_indexformula = \"b1_Red - b2_NIR\",    new_indexfullname = paste0(\"Index_\", as.character(sample(10000, 1)))    )   opts <- jsonlite::fromJSON(indexes_file)  opts$custom_indexes[1]   # Now remove all custom indexes  MODIStsp_resetindexes()  opts <- jsonlite::fromJSON(opts_jsfile)  opts$custom_indexes[1]  }"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_vrt_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create MODIStsp virtual files — MODIStsp_vrt_create","title":"Create MODIStsp virtual files — MODIStsp_vrt_create","text":"Function used create virtual files time series single-band files corresponding different acquisition dates. function takes input folder single-band files stored, creates ENVI Meta file /GDAL vrt file allows access full time series single physical file. Created virtual files stored \"Time Series\" subfolder `out_prod_folder``","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_vrt_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create MODIStsp virtual files — MODIStsp_vrt_create","text":"","code":"MODIStsp_vrt_create(   sensor,   out_prod_folder,   bandnames,   bandsel,   nodata_out,   indexes_bandnames,   indexes_bandsel,   indexes_nodata_out,   quality_bandnames,   quality_bandsel,   quality_nodata_out,   file_prefixes,   ts_format,   out_format,   verbose )"},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_vrt_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create MODIStsp virtual files — MODIStsp_vrt_create","text":"sensor character [\"Terra\"| \"Aqua\" | \"\"] MODIS platform considered. (Ignored MCD* products). Default: \"\" out_prod_folder character Main output folder. bandnames names layers available product processed bandsel character array Original MODIS layers processed. can get list available layers given product using function MODIStsp_get_prodlayers (e.g., MODIStsp_get_prodlayers(\"M*D13Q1\")$bandnames), Default: NULL nodata_out numeric Output nodata value used vrt files indexes_bandnames names indexes available product processed indexes_bandsel character arraySpectral Indexes computed starting reflectance bands. can get list available quality layers given product using function MODIStsp_get_prodlayers (e.g., MODIStsp_get_prodlayers(\"M*D13Q1\")$indexes_bandnames), Default: NULL indexes_nodata_out nodata value indexes vrts quality_bandnames names quality indicators available product processed quality_bandsel character array Quality Indicators computed starting bit fields original MODIS layers. can get list available quality layers given product using function MODIStsp_get_prodlayers (e.g., MODIStsp_get_prodlayers(\"M*D13Q1\")$quality_bandnames), Default: NULL quality_nodata_out nodata value quality vrts file_prefixes character array (2) file_prefixes TERRA AQUA - used identify files corresponding sensor ts_format character [\"ENVI\" | \"GDAL\" | \"\"] Required output format virtual file. out_format character [\"ENVI\" | \"GTiff\"] Format images used \"input\" vrt contained out_prod_folder/band folders. verbose logical FALSE, suppress processing messages, Default: TRUE","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_vrt_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create MODIStsp virtual files — MODIStsp_vrt_create","text":"NULL - function called side effects","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_vrt_create.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create MODIStsp virtual files — MODIStsp_vrt_create","text":"License: GPL 3.0","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/MODIStsp_vrt_create.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create MODIStsp virtual files — MODIStsp_vrt_create","text":"Lorenzo Busetto, phD (2014-2017) Luigi Ranghetti, phD (2015)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/bbox_from_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve bbox from a spatial file — bbox_from_file","title":"Retrieve bbox from a spatial file — bbox_from_file","text":"Helper function used retrieve bounding box specified spatial file recognized  sf raster: function reads extent using sf::st_bbox()","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/bbox_from_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve bbox from a spatial file — bbox_from_file","text":"","code":"bbox_from_file(file_path, crs_out)"},{"path":"https://docs.ropensci.org/MODIStsp/reference/bbox_from_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve bbox from a spatial file — bbox_from_file","text":"file_path character path spatial file. crs_out (crs | character) crs desired output projection, string coercible using sf::st_crs() (e.g., WKT numeric EPSG code)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/bbox_from_file.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Retrieve bbox from a spatial file — bbox_from_file","text":"License: GPL 3.0","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/bbox_from_file.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve bbox from a spatial file — bbox_from_file","text":"Lorenzo Busetto, phD (2017) Luigi Ranghetti, phD (2017)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_files_existence.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if all files required for a given date already exist — check_files_existence","title":"Check if all files required for a given date already exist — check_files_existence","text":"Accessory function used see expected files selected date already present output folder. expected files already present, check_files set TRUE, date skipped MODIStsp_process.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_files_existence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if all files required for a given date already exist — check_files_existence","text":"","code":"check_files_existence(   out_prod_folder,   file_prefix,   yy,   DOY,   bandnames,   bandsel_orig_choice,   indexes_bandnames,   indexes_bandsel,   quality_bandnames,   quality_bandsel,   out_format )"},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_files_existence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if all files required for a given date already exist — check_files_existence","text":"out_prod_folder character MODIStsp output folder file_prefix character File prefix processed product (e.g., MOD13Q1) yy character year DOY character doy bandnames character array Bandnames MODIS product bandsel_orig_choice numeric 0/1 array Indicates original MODIS layers selected processing (contain names bands needed compute SIs selected user!) indexes_bandnames character array Names available spectral indexes (standard + custom) available currently processed product indexes_bandsel numeric 0/1 array Indicates spectral indexes selected processing quality_bandnames character array Name available Quality Indicators currently processed product quality_bandsel numeric 0/1 array Indicates Quality Indicators selected out_format character GTiff ENVI","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_files_existence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if all files required for a given date already exist — check_files_existence","text":"check - logical = 1 expected output files already existing","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_files_existence.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Check if all files required for a given date already exist — check_files_existence","text":"License: GPL 3.0","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_files_existence.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if all files required for a given date already exist — check_files_existence","text":"Lorenzo Busetto, phD (2014-2017) Luigi Ranghetti, phD (2015)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_proc_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"check_proc_opts — check_proc_opts","title":"check_proc_opts — check_proc_opts","text":"helper function used check consistency processing parameters","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_proc_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check_proc_opts — check_proc_opts","text":"","code":"check_proc_opts(proc_opts)"},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_proc_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check_proc_opts — check_proc_opts","text":"proc_opts data frame parameters passed MODIStsp","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_proc_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check_proc_opts — check_proc_opts","text":"NULL - processing interrupted condition met","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of the input projection — check_projection","title":"Check the validity of the input projection — check_projection","text":"helper function used check input projection (passed UTM zone, EPSG code, WKT string) valid projection MODIStsp.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of the input projection — check_projection","text":"","code":"check_projection(projection, abort = FALSE, verbose = TRUE)  # S3 method for default check_projection(projection, abort = FALSE, verbose = TRUE)  # S3 method for numeric check_projection(projection, abort = FALSE, verbose = TRUE)  # S3 method for character check_projection(projection, abort = FALSE, verbose = TRUE)  # S3 method for crs check_projection(projection, abort = FALSE, verbose = TRUE)"},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of the input projection — check_projection","text":"projection character integer corresponding EPSG code, UTM zone (e.g. \"32N\") WKT representation  projection; abort logical TRUE, function aborts case invalid invalid projection passed. Otherwise, function returns \"NA\", Default: TRUE verbose logical TRUE, return messages","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of the input projection — check_projection","text":"character proj4string object file","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_projection.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Check the validity of the input projection — check_projection","text":"function forked package sprawl, version 0.3.0.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_projection.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check the validity of the input projection — check_projection","text":"Lorenzo Busetto, phD (2017) Luigi Ranghetti, phD (2017)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/check_projection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the validity of the input projection — check_projection","text":"","code":"if (FALSE) { check_projection(\"32632\")  check_projection(\"32631\")  check_projection(32633)  check_projection(30, abort = FALSE)  check_projection(\"example of invalid string\", abort = FALSE)  proj_wkt <- sf::st_as_text(sf::st_crs(32632)) check_projection(proj_wkt) }"},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Find MODIS dates included in selected processing period — get_mod_dates","title":"Find MODIS dates included in selected processing period — get_mod_dates","text":"Accessory function find folders corresponding requested dates period within full list retrieved get_moddirs","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find MODIS dates included in selected processing period — get_mod_dates","text":"","code":"get_mod_dates(dates, date_dirs)"},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find MODIS dates included in selected processing period — get_mod_dates","text":"dates 2- element string array specifying start/end dates (yyyy.mm.dd) http addresses folders lpdaac retrieved (e.g., c(\"2015.1.1\", \"2015.12.31) date_dirs data frame full list folders lpdaac archive product interest","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find MODIS dates included in selected processing period — get_mod_dates","text":"array folder names containing data MODIS product acquired period specified \"dates\"","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_dates.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find MODIS dates included in selected processing period — get_mod_dates","text":"License: GPL 3.0","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_dates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find MODIS dates included in selected processing period — get_mod_dates","text":"Luigi Ranghetti, phD (2016) Lorenzo Busetto, phD (2017)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_dirs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of MODIS data folders from http server — get_mod_dirs","title":"Get list of MODIS data folders from http server — get_mod_dirs","text":"Accessory function get full list directories lpdaac http site containing data included time range selected processing (modified Barry Rowlingson function):","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_dirs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of MODIS data folders from http server — get_mod_dirs","text":"","code":"get_mod_dirs(   http,   download_server,   user,   password,   yy,   n_retries,   gui,   out_folder_mod )"},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_dirs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of MODIS data folders from http server — get_mod_dirs","text":"http character http site lpdaac corresponding selected MODIS product download_server character [\"http\" | \"offline\"] download service used; NA, script tries download http. user character username earthdata http server password character password earthdata http server yy character Year folder containing HDF images identified n_retries numeric number times access http server retried case error quitting, Default: 20 gui `logical`` indicates processing called GUI environment . , processing messages sent log file instead console/GTK progress windows. out_folder_mod character output folder MODIS HDF storage","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_dirs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of MODIS data folders from http server — get_mod_dirs","text":"character array listing available folders (.k.. dates) requested MODIS product lpdaac http archive, years included time range selected processing.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_dirs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get list of MODIS data folders from http server — get_mod_dirs","text":"License: GPL 3.0","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_dirs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get list of MODIS data folders from http server — get_mod_dirs","text":"Original code Babak Naimi (.getModisList, ModisDownload.R) modified adapt MODIStsp scheme http archive (instead old FTP) : Lorenzo Busetto, phD (2014-2017) Luigi Ranghetti, phD (2016-2017)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_filenames.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the names of MODIS images corresponding to the selected dates — get_mod_filenames","title":"Find the names of MODIS images corresponding to the selected dates — get_mod_filenames","text":"Accessory function find names HDF images corresponding given date interval spatial tiles within lpdaac archive.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_filenames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the names of MODIS images corresponding to the selected dates — get_mod_filenames","text":"","code":"get_mod_filenames(   http,   used_server,   user,   password,   n_retries,   date_dir,   v,   h,   tiled,   out_folder_mod,   gui )"},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_filenames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the names of MODIS images corresponding to the selected dates — get_mod_filenames","text":"http character url http site lpdaac corresponding given MODIS product. used_server character can assume values \"http\"; NA. user character username earthdata server. password character password earthdata server. n_retries numeric number times access http server retried case error quitting, Default: 20. date_dir character array array folder names corresponding acquisition containing dates MODIS files downloaded identified (return array get_mod_dates). v integer array containing sequence vertical tiles interest (e.g., c(18,19)). h integer array containing sequence horizontal tiles interest (e.g., c(3,4)). tiled numeric [0/1] indicates product downloaded tiled tiled. 1 = tiled product; 0 = non-tiled product (resolution 0.05 deg). out_folder_mod character folder hdf files stored. gui logical indicates processing called within GUI environment . , processing messages redirected direct log file.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_filenames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the names of MODIS images corresponding to the selected dates — get_mod_filenames","text":"character array containing names HDF images corresponding requested tiles available product selected date","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_filenames.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find the names of MODIS images corresponding to the selected dates — get_mod_filenames","text":"License: GPL 3.0","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_mod_filenames.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find the names of MODIS images corresponding to the selected dates — get_mod_filenames","text":"Original code Babak Naimi (.getModisList, ModisDownload.R) modified adapt MODIStsp scheme http archive (instead old FTP) : Lorenzo Busetto, phD (2014-2016) Luigi Ranghetti, phD (2016)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_reqbands.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the MODIS original bands needed for a given processing run — get_reqbands","title":"Identify the MODIS original bands needed for a given processing run — get_reqbands","text":"Helper function used MODIStsp_process identify MODIS hdf layers required current process. required layers include MODIS original layers selected user, plus required compute Spectral Indexes Quality Indicators selected user","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_reqbands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the MODIS original bands needed for a given processing run — get_reqbands","text":"","code":"get_reqbands(   bands_indexes_matrix,   indexes_bandsel,   indexes_bandnames,   quality_bandsel,   quality_bandnames,   out_prod_folder,   file_prefix,   yy,   DOY,   out_format,   reprocess )"},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_reqbands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the MODIS original bands needed for a given processing run — get_reqbands","text":"bands_indexes_matrix matrix built set_bandind_matrix indexes_bandsel character arraySpectral Indexes computed starting reflectance bands. can get list available quality layers given product using function MODIStsp_get_prodlayers (e.g., MODIStsp_get_prodlayers(\"M*D13Q1\")$indexes_bandnames), Default: NULL indexes_bandnames names indexes available product processed quality_bandsel character array Quality Indicators computed starting bit fields original MODIS layers. can get list available quality layers given product using function MODIStsp_get_prodlayers (e.g., MODIStsp_get_prodlayers(\"M*D13Q1\")$quality_bandnames), Default: NULL quality_bandnames names quality indicators available product processed out_prod_folder character Main folder MODIStsp processed raster stored. Used check given processed image already exists. file_prefix File prefix corresponding MODIS product processed. Used check given processed image already exists. yy Year corresponding image processed. Used check given processed image already exists. DOY DOY corresponding image processed. Used check given processed image already exists.. Used check given processed image already exists. out_format character [\"ENVI\" | \"GTiff\"] Desired output format. reprocess logical TRUE, reprocess data already existing dates.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_reqbands.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify the MODIS original bands needed for a given processing run — get_reqbands","text":"req_bands_indexes","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_reqbands.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Identify the MODIS original bands needed for a given processing run — get_reqbands","text":"Lorenzo Busetto, phD (2017)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_yeardates.html","id":null,"dir":"Reference","previous_headings":"","what":"identify dates to be processed for a year — get_yeardates","title":"identify dates to be processed for a year — get_yeardates","text":"helper function needed identify ranges dates processed given year function download_range selection starting/ending dates years","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_yeardates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"identify dates to be processed for a year — get_yeardates","text":"","code":"get_yeardates(download_range, yy, start_year, end_year, start_date, end_date)"},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_yeardates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"identify dates to be processed for a year — get_yeardates","text":"download_range character [\"Full\" | \"Seasonal\"] \"full\", available images starting ending dates downloaded; \"seasonal\", images included season downloaded (e.g: starting date 2005-12-01 ending 2010-02-31, images December, January February 2005 2010 - excluding 2005-01, 2005-02 2010-12 - downloaded), Default: Full yy numeric year processing dates need identified start_year numeric start year current MODIStsp_process run end_year numeric end year current MODIStsp_process run. start_date character`` Start date images download preprocessing (yyyy.mm.dd) current MODIStsp_process` run. end_date character Start date images download preprocessing (yyyy.mm.dd) current MODIStsp_process run.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_yeardates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"identify dates to be processed for a year — get_yeardates","text":"OUTPUT_DESCRIPTION","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/get_yeardates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"identify dates to be processed for a year — get_yeardates","text":"Lorenzo Busetto, phD (2017)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/install_MODIStsp_launcher.html","id":null,"dir":"Reference","previous_headings":"","what":"Install a launcher for MODIStsp — install_MODIStsp_launcher","title":"Install a launcher for MODIStsp — install_MODIStsp_launcher","text":"Function allows use MODIStsp batch mode creating links","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/install_MODIStsp_launcher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install a launcher for MODIStsp — install_MODIStsp_launcher","text":"","code":"install_MODIStsp_launcher(   bin_dir = NA,   rscript_dir = NA,   desktop_dir = NA,   desktop_shortcut = TRUE,   sudo = FALSE )"},{"path":"https://docs.ropensci.org/MODIStsp/reference/install_MODIStsp_launcher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install a launcher for MODIStsp — install_MODIStsp_launcher","text":"bin_dir Linux, directory link bash script placed, Default: \"/usr/bin\" - use path included PATH environment variable suggested; Windows, directory place menu entry Start Menu, Default: Start Menu -> Programs -> MODIStsp. rscript_dir character Windows , path directory Rscript installed (usually \\\"C:/Progra~1/R/R-version/bin/x64\"). Edit parameter R installed custom directory. desktop_dir character Linux, directory desktop entry placed, Default: /usr/share/applications; Windows, directory place desktop entry, Default: \"Desktop\" (Ignored desktop_shortcut = FALSE). desktop_shortcut logical indicates desktop entry desktop shortcut created, Default: TRUE. sudo (Linux ) logical  indicates administrator rights used write within bin_dir desktop_dir, FALSE root password requested launching function. Note using default values bin_dir desktop_dir requires set option TRUE (launch script root session R), Default: FALSE","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/install_MODIStsp_launcher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install a launcher for MODIStsp — install_MODIStsp_launcher","text":"function called side effects.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/install_MODIStsp_launcher.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install a launcher for MODIStsp — install_MODIStsp_launcher","text":"MODIStsp can used also stand-alone tool (.e., without opening RStudio R-GUI) launching bash/batch script, stored installation folder (/ExtData/Launcher) allow easily find , function creates desktop entry symbolic link bash script (Linux) link Start Menu batch script shortcut desktop (Windows). Note , packages MODIStsp installed version-dependent directory (default one ), function re-executed R upgrade, otherwise links continue point old package version!","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/install_MODIStsp_launcher.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Install a launcher for MODIStsp — install_MODIStsp_launcher","text":"License: GPL 3.0","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/install_MODIStsp_launcher.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Install a launcher for MODIStsp — install_MODIStsp_launcher","text":"Luigi Ranghetti, phD (2015)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/install_MODIStsp_launcher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install a launcher for MODIStsp — install_MODIStsp_launcher","text":"","code":"# Linux: common installation (script in /usr/bin, # desktop entry in /usr/share/applications) # (requires administrator permissions) if (FALSE) { # the administrator password is asked interactively install_MODIStsp_launcher(sudo = TRUE) }  # Linux: installation in a directory which does not require administrator # permissions if (FALSE) { install_MODIStsp_launcher(bin_dir = \"~/bin\", desktop_dir = \"~/Desktop\") }  # Windows: common installation # (script in the Start Menu and shortcut on the desktop) if (FALSE) { install_MODIStsp_launcher() }"},{"path":"https://docs.ropensci.org/MODIStsp/reference/load_prodopts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load characteristics of the different MODIS products — load_prodopts","title":"Load characteristics of the different MODIS products — load_prodopts","text":"FUNCTION_DESCRIPTION","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/load_prodopts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load characteristics of the different MODIS products — load_prodopts","text":"","code":"load_prodopts()"},{"path":"https://docs.ropensci.org/MODIStsp/reference/load_prodopts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load characteristics of the different MODIS products — load_prodopts","text":"OUTPUT_DESCRIPTION","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/load_prodopts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load characteristics of the different MODIS products — load_prodopts","text":"Load characteristics different MODIS products prodopts_file","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/load_prodopts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load characteristics of the different MODIS products — load_prodopts","text":"Lorenzo Busetto, phD (2017)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/process_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Spawn processing update messages — process_message","title":"Spawn processing update messages — process_message","text":"helper function provide processing messages","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/process_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spawn processing update messages — process_message","text":"","code":"process_message(mess_text, verbose = TRUE)"},{"path":"https://docs.ropensci.org/MODIStsp/reference/process_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spawn processing update messages — process_message","text":"mess_text character text shown processing windows /console verbose logical FALSE, suppress processing messages, Default: TRUE","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/process_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spawn processing update messages — process_message","text":"function called side effects","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/process_message.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Spawn processing update messages — process_message","text":"Lorenzo Busetto, phD (2017)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/reproj_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Reproject a bounding box — reproj_bbox","title":"Reproject a bounding box — reproj_bbox","text":"Helper function used reproject bounding boxes; setting parameter 'enlarge' allows choose new one one completely includes original extent output projection, simply one obtained reprojecting upper-left lower-right corners.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/reproj_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reproject a bounding box — reproj_bbox","text":"","code":"reproj_bbox(bbox, in_proj, out_proj, enlarge = TRUE)"},{"path":"https://docs.ropensci.org/MODIStsp/reference/reproj_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reproject a bounding box — reproj_bbox","text":"bbox input bounding box (can matrix obtained sp::bbox(), numeric vector format (xmin, ymin, xmax, ymax)). in_proj (crs | character) crs input projection, string coercible using sf::st_crs() (e.g., WKT numeric EPSG code) out_proj crs crs output projection, string coercible using sf::st_crs() (e.g., WKT numeric EPSG code) enlarge `logical`` TRUE, reprojected bounding box one completely include original one; FALSE, simply one obtained reprojecting upper-left lower-right corners.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/reproj_bbox.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Reproject a bounding box — reproj_bbox","text":"License: GPL 3.0","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/reproj_bbox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reproject a bounding box — reproj_bbox","text":"Luigi Ranghetti, phD (2015)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/set_bandind_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to determine the bands needed to compute SIs and QIs — set_bandind_matrix","title":"Helper function to determine the bands needed to compute SIs and QIs — set_bandind_matrix","text":"FUNCTION_DESCRIPTION","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/set_bandind_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to determine the bands needed to compute SIs and QIs — set_bandind_matrix","text":"","code":"set_bandind_matrix(   bandnames,   bandsel,   indexes_bandnames,   indexes_bandsel,   indexes_formula,   quality_bandnames,   quality_bandsel,   quality_source )"},{"path":"https://docs.ropensci.org/MODIStsp/reference/set_bandind_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to determine the bands needed to compute SIs and QIs — set_bandind_matrix","text":"bandnames names layers available product processed bandsel character array Original MODIS layers processed. can get list available layers given product using function MODIStsp_get_prodlayers (e.g., MODIStsp_get_prodlayers(\"M*D13Q1\")$bandnames), Default: NULL indexes_bandnames names indexes available product processed indexes_bandsel character arraySpectral Indexes computed starting reflectance bands. can get list available quality layers given product using function MODIStsp_get_prodlayers (e.g., MODIStsp_get_prodlayers(\"M*D13Q1\")$indexes_bandnames), Default: NULL indexes_formula formulas indexes available product processed quality_bandnames names quality indicators available product processed quality_bandsel character array Quality Indicators computed starting bit fields original MODIS layers. can get list available quality layers given product using function MODIStsp_get_prodlayers (e.g., MODIStsp_get_prodlayers(\"M*D13Q1\")$quality_bandnames), Default: NULL quality_source sources data (original layers) quality indicators available product processed","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/set_bandind_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to determine the bands needed to compute SIs and QIs — set_bandind_matrix","text":"matrix containing info bands needed computing available QI SI","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/set_bandind_matrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to determine the bands needed to compute SIs and QIs — set_bandind_matrix","text":"Lorenzo Busetto, phD (2017)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/split_nodata_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Split NODATA values or create matrix for reclassification — split_nodata_values","title":"Split NODATA values or create matrix for reclassification — split_nodata_values","text":"Internal functions: split_nodata_values splits ranges NODATA saved xml product file readable vector NoData values; create_nodata_rcl creates matrix reclassification NODATA values used raster::reclassify function.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/split_nodata_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split NODATA values or create matrix for reclassification — split_nodata_values","text":"","code":"split_nodata_values(nodata_in, take_all = TRUE)  create_nodata_rcl(nodata_in, nodata_out)"},{"path":"https://docs.ropensci.org/MODIStsp/reference/split_nodata_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split NODATA values or create matrix for reclassification — split_nodata_values","text":"nodata_in Character vector corresponding input NoData values saved xml product file (one values per band). take_all Logical: TRUE (default), NoData values considered; FALSE, last one taken. See \"details\" meaning parameter. nodata_out Character vector corresponding output NoData values saved xml product file (one single value per band).","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/split_nodata_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split NODATA values or create matrix for reclassification — split_nodata_values","text":"split_nodata_values  returns list length nodata_in vector, element vector NoData values. create_nodata_rcl returns list matrices format specified parameter rcl raster::reclassify. parameter right intended used right = NA.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/split_nodata_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split NODATA values or create matrix for reclassification — split_nodata_values","text":"MODIS products can one NoData values (sometimes different meanings, e.g. 255 = \"fill\" 254 = \"detector saturated\" MOD09A1 product). setting \"Change NoData values\" \"Yes\" GUI, NoData values coerced one single new NoData value; conversely, setting \"\" one value assumed NoData. parameter take_all assumed used way, using function take_all = TRUE \"Change NoData values\" = \"Yes\" take_all = FALSE \"Change NoData values\" = \"\". xml product file, NoData ranges set : x products single NoData values; x,y,z products vector NoData values; x:y products range NoData values; x:y,z combination NoData ranges /values. split_nodata_values NoData values assumed integer: means intervals splitted integer values (e.g. \"250:255\" becomes \"250 251 252 253 254 255\"). Conversely, function create_nodata_rcl creates intervals, can also manage float values (practice, make difference within MODIS products, since NoData values always integer values). function interprets strings convert vectors single values. Notice first NoData value one considered 'Change NoData values' set ''.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/split_nodata_values.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split NODATA values or create matrix for reclassification — split_nodata_values","text":"Luigi Ranghetti, phD (2018)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/reference/split_nodata_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split NODATA values or create matrix for reclassification — split_nodata_values","text":"","code":"MODIStsp:::create_nodata_rcl(c(\"255\",\"250,254:255\"), c(\"255\",\"255\")) #> [[1]] #>      from  to becomes #> [1,]  255 255     255 #>  #> [[2]] #>      from  to becomes #> [1,]  250 250     255 #> [2,]  254 255     255 #>"},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-210","dir":"Changelog","previous_headings":"","what":"MODIStsp 2.1.0","title":"MODIStsp 2.1.0","text":"CRAN release: 2023-10-13","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"major-changes-2-1-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"MODIStsp 2.1.0","text":"Major product update: remove decommissioned products v6 (thanks @pkautio). Changing default version 006 061.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"minor-changes-2-1-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"MODIStsp 2.1.0","text":"Remove explicit {rgdal} dependency (https://r-spatial.org/r/2022/12/14/evolution2.html). Remove suggested dependency {geojsonlint}. Change maintainer’s email order follow CRAN requirements.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-2010","dir":"Changelog","previous_headings":"","what":"MODIStsp 2.0.10","title":"MODIStsp 2.0.10","text":"CRAN release: 2023-06-12","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"minor-changes-2-0-10","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"MODIStsp 2.0.10","text":"Remove explicit {rgdal} dependency (https://r-spatial.org/r/2022/12/14/evolution2.html). Remove suggested dependency {geojsonlint}. Change maintainer’s email order follow CRAN requirements.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-209","dir":"Changelog","previous_headings":"","what":"MODIStsp 2.0.9","title":"MODIStsp 2.0.9","text":"CRAN release: 2022-08-26","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"minor-changes-2-0-9","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"MODIStsp 2.0.9","text":"Revise authenticate type \"\" (default \"basic\") reflect changes USGS authentication maintenance U.S. GOVERNMENT COMPUTER. ## Bug fixes Remove useshinyalert() avoid warnings.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-208","dir":"Changelog","previous_headings":"","what":"MODIStsp 2.0.8","title":"MODIStsp 2.0.8","text":"CRAN release: 2022-04-25","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"minor-changes-2-0-8","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"MODIStsp 2.0.8","text":"Reducing package size State GDAL support HDF4 format needed (vignette package description), exit gracefully HDF4 supported.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-207","dir":"Changelog","previous_headings":"","what":"MODIStsp 2.0.7","title":"MODIStsp 2.0.7","text":"CRAN release: 2022-04-06","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"minor-changes-2-0-7","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"MODIStsp 2.0.7","text":"Add product version 061 existing products (#238) Closing support GitHub issues, due career change maintainer.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"bug-fixes-2-0-7","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"MODIStsp 2.0.7","text":"Fix #245","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-206","dir":"Changelog","previous_headings":"","what":"MODIStsp 2.0.6","title":"MODIStsp 2.0.6","text":"CRAN release: 2021-08-03","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"minor-changes-2-0-6","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"MODIStsp 2.0.6","text":"Replace M*D17A3H M*D17A3HGF add M*D17A2HGF (#237) Avoid errors case missing internet connection","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"bug-fixes-2-0-6","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"MODIStsp 2.0.6","text":"Patch bbox loaded json case drawn extent (#228) Fix #226 Fix #232 Fix #234 Fix CRAN notes","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-205","dir":"Changelog","previous_headings":"","what":"MODIStsp 2.0.5","title":"MODIStsp 2.0.5","text":"CRAN release: 2020-12-12","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"main-changes-2-0-5","dir":"Changelog","previous_headings":"","what":"Main changes","title":"MODIStsp 2.0.5","text":"Edit documentation related change maintainer (see https://docs.ropensci.org/MODIStsp/articles/lorenzo). Add argument parallel function MODIStsp() MODSIStsp_process() allow running processing single core modality.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"minor-changes-2-0-5","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"MODIStsp 2.0.5","text":"Fix Travis tests Bug fix (#222)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-203","dir":"Changelog","previous_headings":"","what":"MODIStsp 2.0.3","title":"MODIStsp 2.0.3","text":"CRAN release: 2020-09-20","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"main-changes-2-0-3","dir":"Changelog","previous_headings":"","what":"Main changes","title":"MODIStsp 2.0.3","text":"submission fix errors Debian CRAN builds, due improper trigger internal function leading writing user’s lib folder. Fixes bug leading crash using scale_val = TRUE change_no_data = FALSE Fixes bug leading GUI crashing rather giving info messages case input parameters specified Implements redirection MODIS products web pages pressing corresponding button Modifies slightly Shiny GUI","code":""},{"path":[]},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"main-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Main changes","title":"MODIStsp 2.0.0","text":"Replace old gWidgets-based GUI new one based Shiny; Enhances support CLI usage. Now parameters can passed MODIStsp function. also opts_file passed, values specified explicitly call override options file; Fixes problems retrieval corners MODIS products 4008 projection (fixes #204); Fixes problems/improves support datasets multiple NoData values. Now, NoData values kept original values NoData change set FALSE. Also, Scale/Offset longer wrongly applied also NoData values scaleval = TRUE;","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-140","dir":"Changelog","previous_headings":"","what":"MODIStsp 1.4.0","title":"MODIStsp 1.4.0","text":"CRAN release: 2020-05-10","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"main-changes-1-4-0","dir":"Changelog","previous_headings":"","what":"Main changes","title":"MODIStsp 1.4.0","text":"switch use GDAL3/PROJ6 WKTs projection representation, using sf::gdal_utils perform gdalwarp/gdaltranslate instead gdalUtils external GDAL. switch sf internal work vector data. Remove sp, rgdal, rgeos, pacman, gdalUtils dependencies Adds support products MCD19A1 MCD19A2 products","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-139","dir":"Changelog","previous_headings":"","what":"MODIStsp 1.3.9","title":"MODIStsp 1.3.9","text":"CRAN release: 2019-06-21","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"main-changes-1-3-9","dir":"Changelog","previous_headings":"","what":"Main changes","title":"MODIStsp 1.3.9","text":"Fixes bug causing crashes MOD14A1 product Adds support product MCD12Q2 removes support longer available version 5 products. Updates web links MODIS products description pages","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-138","dir":"Changelog","previous_headings":"","what":"MODIStsp 1.3.8","title":"MODIStsp 1.3.8","text":"CRAN release: 2019-03-08","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"main-changes-1-3-8","dir":"Changelog","previous_headings":"","what":"Main changes","title":"MODIStsp 1.3.8","text":"Fixed issue causing incorrect application scale/offset values GDAL versions > 2.3 (introduced change behaviour gdal_buildvrt - https://trac.osgeo.org/gdal/ticket/3221#comment:5) - see https://github.com/ropensci/MODIStsp/issues/163 Added support following products: MOD21A1D.006 MOD21A1N.006 MOD21A2.006/","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"bug-fixing-1-3-8","dir":"Changelog","previous_headings":"","what":"Bug fixing","title":"MODIStsp 1.3.8","text":"Fixed issue preventing correct processing products offline mode ( https://github.com/ropensci/MODIStsp/issues/142)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-137","dir":"Changelog","previous_headings":"","what":"MODIStsp 1.3.7","title":"MODIStsp 1.3.7","text":"CRAN release: 2018-12-03","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"main-changes-1-3-7","dir":"Changelog","previous_headings":"","what":"Main changes","title":"MODIStsp 1.3.7","text":"Fixed bug leading incorrect computation custom spectral indices containing “additive” parameters (e.g., (NIR+0.1)/(Red-0.2)) scale_val == FALSE","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"bug-fixing-1-3-7","dir":"Changelog","previous_headings":"","what":"Bug fixing","title":"MODIStsp 1.3.7","text":"Fixed bug leading properly reassigning NoData values processing full tiles using change_nodata = TRUE Fixed inconsistencies definition characteristics products MOD/MYD13C2/C1 MOD/MYD13A3 (erroneous layers xml) Fixed bug leading help messages select layers portion GUI render Updated MOD44B specifications allow download v006 version","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-136","dir":"Changelog","previous_headings":"","what":"MODIStsp 1.3.6","title":"MODIStsp 1.3.6","text":"CRAN release: 2018-07-14","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"main-changes-1-3-6","dir":"Changelog","previous_headings":"","what":"Main changes","title":"MODIStsp 1.3.6","text":"Maintenance release solve CRAN build errors debian, due test_resetindexes test. test now skipped CRAN. Additionally, MODIStsp_addindex function modified require explicit permission user write MODIStsp_previous.json file","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"bug-fixing-1-3-6","dir":"Changelog","previous_headings":"","what":"Bug fixing","title":"MODIStsp 1.3.6","text":"Fixed bug leading errors “Aqua” platform selected download #133","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-135","dir":"Changelog","previous_headings":"","what":"MODIStsp 1.3.5","title":"MODIStsp 1.3.5","text":"CRAN release: 2018-06-24","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"main-changes-1-3-5","dir":"Changelog","previous_headings":"","what":"Main changes","title":"MODIStsp 1.3.5","text":"Maintenance release solve CRAN build errors debian, due test_addindex test. test now skipped CRAN. Additionally, MODIStsp_addindex function modified require explicit permission user write MODIStsp_previous.json file","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"bug-fixing-1-3-5","dir":"Changelog","previous_headings":"","what":"Bug fixing","title":"MODIStsp 1.3.5","text":"Fixed bug leading errors processing extent switching products different Native projection (4008 vs sinusoidal), projection string properly updated. 77f5693e9 Fixed warnings check uniqueness http addresses","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-134","dir":"Changelog","previous_headings":"","what":"MODIStsp 1.3.4","title":"MODIStsp 1.3.4","text":"CRAN release: 2018-06-10","code":""},{"path":[]},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"breaking-changes-1-3-4","dir":"Changelog","previous_headings":"Main changes","what":"Breaking changes","title":"MODIStsp 1.3.4","text":"Due improvements changes GUI (see ), MODIStsp .json options files saved older versions longer supported. Users informed trying use obsolete json file. Removed support FTP download due switch-NASA servers.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"updates-in-supported-products-1-3-4","dir":"Changelog","previous_headings":"Main changes","what":"Updates in supported products","title":"MODIStsp 1.3.4","text":"Removed v005 earlier products, due discontinuation distribution NASA servers Added support following products: MCD64A1; MCD12C1; MCD18A1; MCD18A2; MCD12Q1; MOD44B; MOD44W; MCD12C1; MCD12Q1; MOD12A2; MOD12A3","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"improvements-in-download-functions-1-3-4","dir":"Changelog","previous_headings":"Main changes","what":"Improvements in download functions","title":"MODIStsp 1.3.4","text":"Improvements GUI. now possible set processing extent interactively using “Select Map” button. opens browser window allowing select extent. Use httr::RETRY improve behavior navigating servers retrieve available files downloading hdf file (use_aria == FALSE), thus removing dependency RCurl.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"improvements-in-processing-functions-1-3-4","dir":"Changelog","previous_headings":"Main changes","what":"Improvements in processing functions","title":"MODIStsp 1.3.4","text":"Improved functionality dealing NoData products multiple fill-values. “Change NoData” set “Yes”, case layer multiple Nodata values values set NA output (see github.com/ropensci/MODIStsp#113)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"extensive-code-refactoring-for-submission-to-ropensci-1-3-4","dir":"Changelog","previous_headings":"Main changes","what":"Extensive code refactoring for submission to ropensci.","title":"MODIStsp 1.3.4","text":"Long functions simplified/split smaller functions allow easier maintenance GUI event handlers moved dedicated “R” files Extensive code linting abide ropensci standards Switch jsonlite/xml2 abide ropensci standards Removal less-used dependencies (e.g., hash)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"improvements-in-documentation-and-website-1-3-4","dir":"Changelog","previous_headings":"Main changes","what":"Improvements in documentation and website","title":"MODIStsp 1.3.4","text":"detailed documentation main functions Improvements pkgdown articles include “worked examples” (e.g., MODIStsp_Extract) New article pkgdown showing list supported products","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"improvements-in-test-coverage-1-3-4","dir":"Changelog","previous_headings":"Main changes","what":"Improvements in test coverage","title":"MODIStsp 1.3.4","text":"Several new tests added, bringing coverage 90%","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"new-functions-1-3-4","dir":"Changelog","previous_headings":"Main changes","what":"New functions","title":"MODIStsp 1.3.4","text":"Added MODIStsp_resetindexes remove custom indexes MODIStsp json options file MODIStsp_reset_options reset MODIStsp options default.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"bug-fixing-1-3-4","dir":"Changelog","previous_headings":"Main changes","what":"Bug fixing","title":"MODIStsp 1.3.4","text":"Fixed bug affecting extent selection working non-tiled (MCD) products https://github.com/ropensci/MODIStsp/issues/122 Fixed bugs affecting “Seasonal” time series download","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-1331-release-notes","dir":"Changelog","previous_headings":"","what":"MODIStsp 1.3.3.1 Release Notes","title":"MODIStsp 1.3.3.1 Release Notes","text":"CRAN release: 2017-08-17 mostly maintenance release - fixing bug 1.3.3 submission related missing import NAMESPACE","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"minor-changes-1-3-3-1","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"MODIStsp 1.3.3.1 Release Notes","text":"Improved organization Virtual Raster files RData files “Time_Series” output subfolder. Now virtual files RData files organized sensor layer facilitate access.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-133-release-notes","dir":"Changelog","previous_headings":"","what":"MODIStsp 1.3.3 Release Notes","title":"MODIStsp 1.3.3 Release Notes","text":"CRAN release: 2017-08-12 v1.3.3 released 10/08/2017","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"major-changes-1-3-3","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"MODIStsp 1.3.3 Release Notes","text":"Improved speed computation spectral indexes, quality indicators computation scaled variables using raster::calc() raster::overlay (commits 0f5d76d, 0f5d76d, e462721) Added functionality unit testing using testthat codecov integration. (commit 0c00fc6 others) Added “testing mode” allow users test proper functioning. Now, running MODIStsp(test = X) (X (0,6)) runs processing using default processing parameters (commit 0c00fc6 others)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"minor-changes-1-3-3","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"MODIStsp 1.3.3 Release Notes","text":"Suppression verbose messages (useless) warning messages parsing NASA servers downloading data using “ftp” ( 3775d60);","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"bug-fixing-1-3-3","dir":"Changelog","previous_headings":"","what":"Bug fixing","title":"MODIStsp 1.3.3 Release Notes","text":"Fixed bug preventing “last” choice (present json file) correctly showing GUI upon launch/restore saved json file (commit 633c2dd) Fixed bug affecting MODIS layers coded Unsigned Integer - 32 bit (Thanks Rob Critchlow signaling ). bug due improper handling UInt32 data gdalbuildvrt, causing sometimes incorrect translation HDF output formats (#72). M*D09A1 - 500m Reflectance Band Quality (V005 V006); M*DO9CMG - Coarse Resolution QA (V005 V006); M*D09CMG - Coarse Resolution Number Mapping (V006); M*D09GA - 500m Reflectance Band Quality (V005 V006); M*DOCGA - Band quality MODIS bands 8-15 (V006); M*D11C3 - Days clear-sky conditions validated LSTs; Nights clear-sky conditions validated LSTs (V005 V006); MCD43A2 - BRDF_Albedo_Band_Quality (V005 V006). Fixed bug affecting creation time series files (RData virtual rasters) MCD products (#77) Fixed bug error creation “burn_date” layers MCD45A1 product (#77) Fixed bugs specifying spatial extent files non-interactive execution (#75)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"17042017---modistsp-is-now-on-cran--1-3-3","dir":"Changelog","previous_headings":"","what":"17/04/2017 - MODIStsp is now on CRAN !","title":"MODIStsp 1.3.3 Release Notes","text":"MODIStsp recently accepted CRAN. now , can install simply using install.packages(\"MODIStsp\") ’ll however still able install development version github, containing last improvements bug fixing using: install_github(\"ropensci/MODIStsp\", ref = \"master\")","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-132-release-notes","dir":"Changelog","previous_headings":"","what":"MODIStsp 1.3.2 Release Notes","title":"MODIStsp 1.3.2 Release Notes","text":"CRAN release: 2017-04-15 v1.3.2 released 22/03/2017","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"major-changes-1-3-2","dir":"Changelog","previous_headings":"","what":"Major Changes:","title":"MODIStsp 1.3.2 Release Notes","text":"Added functionality apply scale offset coefficients MODIS original values according specifications single MODIS products.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"details-1-3-2","dir":"Changelog","previous_headings":"Major Changes:","what":"Details:","title":"MODIStsp 1.3.2 Release Notes","text":"MODIS hdf datasets always stored integer values, scales factor /offsets apply order convert indicated measure units reported products’ documentation. Starting v1.3.2: Leaving “Scale output values” option “”, output files left provided NASA, additional indices produced integer values 10000 factor scale; Setting “Scale output values” option “Yes”, scale factor offsets applied existing (example, case Land Surface Temperature values output raster °K), spectral indices floating point values (example, NDVI -1 1, etc.).","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"minor-changes-1-3-2","dir":"Changelog","previous_headings":"","what":"Minor Changes:","title":"MODIStsp 1.3.2 Release Notes","text":"product names output layer names modified reduce length output file names, homogenize names outputs correct errors. compatibility already created output files (versions 1.3.1), old “XML” file specifying output files format still available inst/ExtData/MODIStsp_ProdOpts_old_v1.3.1.xml. use old file naming conventions, users : delete inst/ExtData/MODIStsp_ProdOpts.xml rename MODIStsp_ProdOpts_old_v1.3.1.xml MODIStsp_ProdOpts.xml. delete MODIStsp_ProdOpts.RData Previous folder within your_R-library_path/MODIStsp/Previous Restart MODIStsp  Timeouts httr/ftp requests increased prevent problems download slow connections","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"bug-fixing-1-3-2","dir":"Changelog","previous_headings":"","what":"Bug fixing:","title":"MODIStsp 1.3.2 Release Notes","text":"Fixed bug FTP download speed (Issue #65) Fixed bug download tile 0, preventing download images DOY 001 “yearly based” products (e.g., MOD17)(Issue #64) Fixed bugs affecting FTP download (https://github.com/ropensci/MODIStsp/commit/efbf1b469e7518ffc8a7ec6d9922242d6a5c228f, https://github.com/ropensci/MODIStsp/commit/1dc53a5ff5b355965acec86678a3104bd2d27fd9, https://github.com/ropensci/MODIStsp/commit/fa6c7b42eadce516a2f781604c9db28418120f36)","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-131-release-notes","dir":"Changelog","previous_headings":"","what":"MODIStsp 1.3.1 Release Notes","title":"MODIStsp 1.3.1 Release Notes","text":"v1.3.1 released 13/02/2017","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"major-changes-1-3-1","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"MODIStsp 1.3.1 Release Notes","text":"Added functionality processing Snow Cover datasets: MOD10A1, MOD10A2, MOD10C1, MOD10C2, MOD10CM (Issue #55) devel Added functionality downloading “partial” years (Issue #54) devel Added functionality computing vegetation indexes MCD43A4 (v5-v6), MCD43B4 (v5), MCD43C4 (v5-v6) (Issue #59) master/devel Added functionality accelerating download using aria2c (Issue #55) devel","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"bug-fixing-1-3-1","dir":"Changelog","previous_headings":"","what":"Bug fixing","title":"MODIStsp 1.3.1 Release Notes","text":"Fixed bug download aria, throwing error partial download http download aria (6fbc875) Fixed bug M*D15A2 processing (Issue #60) devel/master Fixed bug MCD12Q1 processing (Issue #58) devel/master Fixed bug MOD13C2 processing (Issue #52) devel/master Fixed bug insertion custom projection (Issue #57) devel/master Fixed bug selection custom index (Issue #53) devel/master","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-130-release-notes","dir":"Changelog","previous_headings":"","what":"MODIStsp 1.3.0 Release Notes","title":"MODIStsp 1.3.0 Release Notes","text":"v1.3.0 released 11/05/2016","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"major-changes-1-3-0","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"MODIStsp 1.3.0 Release Notes","text":"Added functionality downloading preprocessing MODIS collection 006 datasets. products 005 006 collections, user can select version using new droplist GUI. Added functionality -line processing. allows ) reprocessing already downloaded data (example, create time series additional layer) without need connect NASA servers, ii) process HDF files downloaded outside MODIStsp (e.g., directly NASA ftp) stored user’s PC, without need active internet connection. Improved way options saved. Much readable. JSON files now used instead .RData. User options longer saved alongside products characteristics. allow re-use “old” options file even changes made XML file describing products. Improved GUI interface specifying additional Spectral Indexes. Hints now showed user, multiple indexes can added session.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"minor-changes-1-3-0","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"MODIStsp 1.3.0 Release Notes","text":"General improvements GUI interface. Products now grouped categories, allow easier identification selection. Improvements README file vignettes, providing instructions package use. Improved functionality checking “complete” download, comparing size downloaded files files server. Added “configure” file Linux installation. Temporary files necessary processing (e.g., vrt files) now created (destroyed) within “R” temporary folder. Miscellaneous bug-fixing","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-121-release-notes","dir":"Changelog","previous_headings":"","what":"MODIStsp 1.2.1 Release Notes","title":"MODIStsp 1.2.1 Release Notes","text":"v1.2.1 released 11/05/2016","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"major-changes-1-2-1","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"MODIStsp 1.2.1 Release Notes","text":"Modified format “R” output time series rts objects RasterStack objects temporal information added “z” attribute via setZ() Major changes/improvements MODIStsp_extract function: Use plain RasterStack “z” attribute instead rasterstackts Use gdal_rasterize (gdalUtils) instead rasterize (rgdal) improve speed. Temporary shapes rasters necessary saved “R” temporary folder removed automatically Fixed bugs functionality point/lines shapefiles, according specified “small” “small_method” parameters Added functionality retrieving data small polygons Added out_format selection - xts plain data.frame Added possibility use shp filename input directly Added conformity checks inputs Added functionality run without specifying start end dates Added id_field parameter choosing column input SP object used “naming” columns output Removed possibility use “complex” resampling methods reprojecting (e.g., bilinear, cubic, etc.) avoid incorrect resampling categorical variables “contamination” good pixels data.","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"minor-changes-1-2-1","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"MODIStsp 1.2.1 Release Notes","text":"Changed input method starting ending dates selection GUI. Now text field used Added functionality writing data ignore value ENVI files Removed automatic deletion XML files created writeRaster keep metadata information Changed names products GUI products TERRA AQUA dataset M*D09A1, M*D13Q1, etc… Modified code syntax satisfy R code styling guidelines Modified roxygen parameters required functions imported dependent packages Updated corrected list dependencies Updated required “R” version 3.2, minimum versions dependent packages current versions. Added Welcome message Updated links LPDAAC product description pages Changed “print” “cat” calls show messages/warnings “message” “warning” allow easy disabling MODIStsp verbose messages Using “R” tempfile/tempdir save vrt files","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"bug-fixes-1-2-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"MODIStsp 1.2.1 Release Notes","text":"Corrected bug threw error case incorrect bounding box specified","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"modistsp-120-release-notes","dir":"Changelog","previous_headings":"","what":"MODIStsp 1.2.0 Release Notes","title":"MODIStsp 1.2.0 Release Notes","text":"v1.2.0 released 29/07/2015","code":""},{"path":"https://docs.ropensci.org/MODIStsp/news/index.html","id":"major-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"MODIStsp 1.2.0 Release Notes","text":"First stable release advanced implementation MODIStsp ! know 1.0.0, ’s !","code":""}]
